@model AspNetGroupBasedPermissions.Models.SelectUserSiteViewModel
@using Core.Entities.Data
@{ ViewBag.Title = "User Site"; }

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    @using (Html.BeginForm("UserSites", "Account", FormMethod.Post, new { encType = "multipart/form-data", name = "myform" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.UserName)
                                </div>
                            </div>
                            <h4>List Of Cost Center For User : @Html.DisplayFor(model => model.UserName)</h4>
                            <br />

                            @*<table>
                                <tr>
                                    <th>
                                        Select
                                    </th>
                                    <th>
                                        Cost Center
                                    </th>
                                    <th>
                                        Purchase On Behalf
                                    </th>
                                    <th>
                                        Bulk Purchase
                                    </th>
                                </tr>
                                @Html.EditorFor(model => model.RTMCostCenters)
                            </table>*@
                            <div class="col-md-12" style="margin-bottom:20px;">
                                <label class="col-md-2">Company Name:</label>
                                <select class="col-md-10" data-bind="options:availableCostCenter, value:selectedCostCenter,optionsText: 'value'"></select>
                            </div>
                            <input hidden data-bind="value:selectedCostCenter().key" name="CompanyCode">
                            <table id="mainTable" class="table table-striped table-bordered table-hover dataTables-example">
                                <thead>
                                    <tr>
                                        <th>
                                            Select
                                        </th>
                                        <th>
                                            Site
                                        </th>
                                    </tr>
                                </thead>
                                <tbody data-bind="foreach:listCostCenters()">
                                    <tr>
                                        <td>
                                            <input type="hidden" data-bind="value:SiteId, attr:{name: 'RTMDeliverySite['+$index()+'].Id'}" />
                                            <input type="checkbox" data-bind="checked: Selected" />
                                            <input type="hidden" data-bind="value:Selected, attr:{name: 'RTMDeliverySite['+$index()+'].Selected'}" />
                                        </td>
                                        <td>
                                            <span data-bind="text:SiteName, attr:{name: 'RTMDeliverySite['+$index()+'].SiteName'}"></span>
                                        </td>

                                    </tr>
                                </tbody>
                            </table>
                            <br />
                            <hr />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @if (((List<Company>)ViewBag.Companies).Count != 0)
                                    {
                                        <input type="submit" value="Save" class="btn btn-primary" />
                                    }
                                    @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Scripts/plugins/jquery-ui/jqueryuiStyles")
    <style>
        .ui-dialog-3000 {
            z-index: 3000 !important;
        }

        .ui-dialog-2900 {
            z-index: 2900 !important;
        }

        .disable-background-eee {
            background: #eee !important;
        }

        .numberCircle {
            border-radius: 50%;
            behavior: url(PIE.htc); /* remove if you don't care about IE8 */
            width: 20px;
            height: 20px;
            padding: 0px;
            background: #1AB394;
            border: 1px solid #1AB394;
            text-align: center;
            color: white;
            font: 10px;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")

    <script type="text/javascript">


    // Person ViewModel
    var CostCenter = function (data) {
        var self = this;
        this.Selected = ko.observable(data.Selected);
        this.CompanyCode = ko.observable(data.CompanyCode);
        this.SiteId = ko.observable(data.SiteId);
        this.SiteName = ko.observable(data.SiteName);
    };
    //Main ViewModel
    var ViewModel = new function () {
        var self = this;
        var defaultDropdownText = 'All';
        self.costCenters = ko.observableArray([
          @foreach (var item in Model.RTMDeliverySite)
            {
             <text>new CostCenter({</text>
                 <text>Selected: @(item.Selected? "true":"false"),</text>
                 <text>SiteId: '@(item.Id)',</text>
                 <text>CompanyCode: '@Html.Raw(item.CompanyCode)',</text>
                 <text>SiteName: '@Html.Raw(item.SiteName)',</text>
                <text>}),</text>
             }
        ]);

        @if (((List<Company>)ViewBag.Companies).Count == 0)
        {
            <text>self.availableCostCenter = ko.observableArray([{key: "No Company Assigned", value: "No Company Assigned"}</text>
            <text>]);</text>
        }
        else
        {
            <text>self.availableCostCenter = ko.observableArray([{key: defaultDropdownText, value: defaultDropdownText},</text>

            foreach (var item in ((List<Company>)ViewBag.Companies).Select(x => new { x.CompanyCode, x.CompanyName }).Distinct())
            {
                <text>{key: '@Html.Raw(item.CompanyCode)',</text>
                <text>value: '@Html.Raw(item.CompanyName)'},</text>
            }
            <text>]);</text>
        }


        self.selectedCostCenter = ko.observable( self.availableCostCenter()[0]);

        self.listCostCenters = ko.computed(function () {
            var desiredCostCenter = self.selectedCostCenter();
            var records = self.costCenters;
            records = desiredCostCenter.key == defaultDropdownText ? records : ko.observableArray(ko.utils.arrayFilter(records(), function (costCenter) {
                return costCenter.CompanyCode() == desiredCostCenter.key;
            }));
            return records;
        });
    };
    $(document).ready(function () {
        ko.applyBindings(ViewModel);
    });
</script>
}

