@model Core.Entities.Data.CMC.CMCProjectLocation
@{ ViewBag.Title = "Update Project Location";}

    <div style="padding-bottom:50px;" class="wrapper wrapper-content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                <label class="pull-left btn btn-xs btn-primary btn-block" style="font-weight:bolder; background-color:#368; border-color:#368;">Update Project Location</label>
            </div>
            <div class="welldetailsContactedit" style="background-color:#c5e5fa;">
                <br />
                <br />
                <div class="wellpob" style="min-height:200px; background-color: #c5e5fa;">
                    <div class="circle-border">
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessUnit, "Business Unit", new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.DropDownList("BusinessUnit", (IEnumerable<SelectListItem>)Session["BusinessUnit"], " < Select Business Unit >", new { @id = "bizunit", onchange = "FuncBranch(this.value)", @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                    @Html.HiddenFor(model => model.BusinessUnit)
                                    @Html.ValidationMessageFor(model => model.BusinessUnit)
                                </div>
                                @Html.LabelFor(model => model.BranchID, "Branch", new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.DropDownList("BranchID", (IEnumerable<SelectListItem>)Session["BranchID"], " < Select Branch >", new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                    @Html.ValidationMessageFor(model => model.BranchID)
                                </div>
                                @Html.LabelFor(model => model.ProjectID, "Project Name", new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.DropDownList("ProjectID", (IEnumerable<SelectListItem>)Session["ProjectID"], " < Select Project >", new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                    @Html.ValidationMessageFor(model => model.BranchID)
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.LocationCode, "Location Code", new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.TextBox("LocationCode", ViewData[""], new { @class = "form-control", @readonly = "readonly", @style = "font-size:12px;height:30px; background-color: #edfcf9;" })
                                    @Html.ValidationMessageFor(model => model.LocationCode)
                                </div>
                                @Html.LabelFor(model => model.LocationName, "Location Name", new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control", @required = "required", @style = ";font-size:12px;height:30px;" } })
                                    @Html.ValidationMessageFor(model => model.LocationName)
                                </div>
                                @Html.LabelFor(model => model.IsActive, "Is Active?", new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive)
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
            <div class="col-md-offset-5 col-md-9">
                <input type="submit" value="Update" class="btn btn-xs btn-primary" style="border-color:#37a5ed;background-color:#37a5ed;width:60px;" />
                @Html.ActionLink("Cancel", "IndexProjectLocation", null, new { @class = "btn btn-white" })
            </div>


        }

    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")

    <script src="~/Scripts/plugins/knockout/knockout.validation.js"></script>
    <script type="text/javascript">

        
         function FuncBranch(bizUnit) {
              if (bizUnit== null || bizUnit == "") {
                  $('#BranchID').html(""); // clear before appending new list
                  $('#BranchID').append(
                      $('<option></option>').val("").html("--Select Branch--"));
              }
              else {
                  $.ajax({
                      url: '@Url.Action("FillBranch", "Branch", new { area = "Administrator" })',
                      type: "POST",
                      dataType: "JSON",
                      data: {
                         bizUnit: bizUnit
                      },

                      success: function (results) {
                          $('#BranchID').html(""); // clear before appending new list
                          $('#BranchID').append(
                          $('<option></option>').val("").html("--Select Branch--"));
                          $.each(results, function (i, results) {
                              $('#BranchID').append(
                                  $('<option></option>').val(results.ID).html(results.BranchName));
                          });
                      },
                      error: function (error) {
                          $.notify(
                              error,
                              { position: "top center", className: "Please Select A Correct Branch" }
                          );
                      }
                  });
              }
            }


        $(document).ready(function () {

            $("#RoadTaxDate").datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            }).datepicker("setDate", new Date());

        });

       
    </script>
}

