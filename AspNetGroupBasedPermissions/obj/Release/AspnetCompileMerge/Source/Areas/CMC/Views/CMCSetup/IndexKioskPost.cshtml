@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "Setup Project";}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content" style="height:30px; color:white; background-color:#368">
                    <section class="content-header">
                        <h4>
                            @ViewBag.title
                            <small style="color:white">: kiosk/post listing</small>
                        </h4>
                    </section>
                </div>
                <div class="ibox-content dataTables_scroll dataTables_wrapper form-inline no-foote" style="min-height:40px; color:black; background-color:#368">
                    <div class="col-sm-3">
                        <input type="hidden" name="locid" id="recId" value="@ViewBag.LocationID" />
                        <input type="hidden" name="project" id="projectCode" value="@ViewBag.ProjectID" />
                    </div>

                    <div class="dataTables_filter dataTables_length dataTables_length pull-right">
                        <label>
                            <select class="form-control input-sm" style="width:80px;font-size:11px" data-bind="value:pageSize">
                                <option value="10">10/page</option>
                                <option value="25">25/page</option>
                                <option value="50">50/page</option>
                                <option value="100">100/page</option>
                            </select>
                        </label>
                        <label><input type="text" class="form-control input-sm" style="font-size:11px" data-bind="value: formVendorSearch, valueUpdate: 'keyup'" placeholder="Search">&nbsp;&nbsp;&nbsp;</label>
                        <div class="dataTables_filter dataTables_length dataTables_length pull-right">
                            @Html.ActionLink("Previous Page", "IndexProjectLocation", null, new { @class = "btn btn-xs btn-primary pull-left", @style = "border-color:steelblue;background-color:steelblue; color: white;" })
                            @Html.ActionLink("Create", "CreateKioskPost", "CMCSetup", new { id = @ViewBag.LocationID }, new { @class = "modal-link  pull-right btn btn-xs btn-primary btn-block", @style = "margin-left:5px; margin-right:5px;font-size:12px;padding-left:3px;padding-right:3px;padding-bottom:3px;padding-top:3px;width:79px;height:30px; " })
                        </div>
                    </div>
                </div>

                <div class="ibox-content">
                    <div class="dataTables_scroll dataTables_wrapper form-inline no-footer">
                        <table id="mainTable" class="table table-striped table-bordered table-hover dataTables-example">
                            <thead>
                                <tr style="background:black;color:white">
                                    <th>Kiosk/Post Code</th>
                                    <th>Kiosk/Post Name</th>
                                    <th>Bank Name</th>
                                    <th>Account Number</th>
                                    <th>Account Type</th>
                                    <th>Email Address</th>
                                    <th>Contact Person</th>
                                    <th>Reference#</th>
                                    <th>Active?</th>
                                    <th></th>
                                    <th><input name="select_all" type="hidden"></th>
                                </tr>
                            </thead>
                            <tbody data-bind="dataTablesForEach:
                            @Html.Partial("_IndexColumn11")
                                <tr>

                                    <td data-bind="text:KioskPostCode, style : {width: '15%' }"></td>
                                    <td data-bind="text:KioskPostName, style : {width: '25%' } "></td>
                                    <td data-bind="text:BankName, style : {width: '25%' } "></td>
                                    <td data-bind="text:AccountNumber, style : {width: '35%' } "></td>
                                    <td data-bind="text:AccountType, style : {width: '35%' } "></td>
                                    <td data-bind="text:EmailAddress, style : {width: '35%' } "></td>
                                    <td data-bind="text:ContactPerson, style : {width: '35%' } "></td>
                                    <td data-bind="text:ReferenceNo, style : {width: '35%' } "></td>
                                    <td data-bind="text:IsActive, style : {width: '5%' } "></td>
                                    <td data-bind="style : {width: '4%' }">
                                        <a data-bind="visible:ShowButton==true,attr: { href: DetailURL}" title="Click To View" style="color:steelblue;font-size:11px" class="modal-link">Edit</a>
                                    </td>
                                    <td data-bind="style : {width: '4%' }">
                                        <a data-bind="visible:ShowButton==true,attr: { href: PostKioskURL}" title="Click To View" style="color:steelblue;font-size:11px" class="modal-link">Delete</a>
                                    </td>

                                </tr>
                            </tbody>
                   
                        </table>
                        <div class="dataTables_info">
                            Showing <label data-bind="text: totalRow()==0 ? 0 : (indexPage()*pageSize())+1"></label> to <label data-bind="text: (indexPage()+1)*pageSize() > totalRow() ? totalRow():(indexPage()+1)*pageSize()"></label> of <label data-bind="text: totalRow"></label> entries
                        </div>
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination">
                                <li class="paginate_button previous" data-bind="click: prevPage, disable: indexPage()==0, css: { 'disabled': indexPage()==0}" tabindex="0"><a href="#">Previous</a></li>
                                <li class="paginate_button active" tabindex="0"><a href="#"><label data-bind="text: indexPage()+1"></label></a></li>
                                <li class="paginate_button next" data-bind="click: nextPage, disable: (indexPage()+1)==totalPage(), css: { 'disabled': (indexPage()+1)==totalPage()}" tabindex="0"><a href="#">Next</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-container" class="modal fade"
         tabindex="-1" role="dialog">
        <div class="modal-content">
        </div>
        <div class="modal-content2">
        </div>
    </div>


@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Scripts/plugins/jquery-ui/jqueryuiStyles")
    <style>
        .form-popup {
            display: none;
            position: fixed;
            bottom: 100px;
            right: 40px;
            left: 250px;
            border: 3px solid #f1f1f1;
            z-index: 9;
        }

        .modal-content {
            width: 1000px !important;
            margin: 30px auto !important;
        }

        .ui-dialog-3000 {
            z-index: 3000 !important;
        }

        .ui-dialog-2900 {
            z-index: 2900 !important;
        }

        .disable-background-eee {
            background: #eee !important;
        }

        .dataTables_scroll {
            overflow: auto;
            position: relative;
        }

        .backgroundSelected {
            background-color: rgb(102, 204, 204) !important;
        }

        .label_p {
            display: inline-block;
            max-width: 100%;
            margin-bottom: 0px;
            font-weight: normal !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/notifyjs")

    <script type="text/javascript">

       $(function () {
            $('body').on('click', '.modal-link', function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#modal-container');
                $(this).attr('data-toggle', 'modal');
            });
            $('body').on('click', '.modal-close-btn', function () {
                $('#modal-container').modal('hide');
            });
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
            $('#CancelModal').on('click', function () {
                return false;
            });
       });

        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "customDate-pre": function (a) {
                var ukDatea = a.split('/');
                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },

            "customDate-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            "customDate-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });
        Date.prototype.toFormattedDate = function () {
            var dd = this.getDate();
            if (dd < 10) dd = '0' + dd;
            var mm = this.getMonth() + 1;
            if (mm < 10) mm = '0' + mm;
            var yyyy = this.getFullYear();
            /* change format here */
            return String(dd + "/" + mm + "/" + yyyy);
        };

        var MSR = function (data) {
            var self = this;
            this.ID = ko.observable(data.ID);
            this.KioskPostCode = ko.observable(data.KioskPostCode);
            this.KioskPostName = ko.observable(data.KioskPostName);
            this.BankName = ko.observable(data.BankName);
            this.AccountNumber = ko.observable(data.AccountNumber);
            this.AccountType = ko.observable(data.AccountType);
            this.ReferenceNo = ko.observable(data.ReferenceNo);
            this.EmailAddress = ko.observable(data.EmailAddress);
            this.ContactPerson = ko.observable(data.ContactPerson);
            this.IsActive = ko.observable(data.IsActive);
            this.DetailURL = ko.observable(data.DetailURL);
            this.PostKioskURL = ko.observable(data.PostKioskURL);
            this.ShowButton = ko.observable(data.ShowButton);
        };

        var ViewModel = new function () {
            var self = this;
            var defaultDropdownText = 'All';
          //  var defaultDropdownTextStatus = 'Draft';
         //   var defaultdate = new Date().toFormattedDate();
            self.pageSize = ko.observable(10);
            self.indexPage = ko.observable(0);
            self.totalPage = ko.observable(1);
            self.totalRow = ko.observable(0);
            self.hocs = ko.observableArray([]);
            self.formVendorSearch = ko.observable("");

            var defaultdate = new Date().toFormattedDate();

           self.nextPage = function () {
                if ((self.indexPage() + 1) < self.totalPage()) {
                    self.indexPage(self.indexPage() + 1);
                    self.loadhoc();
                }
            }
            self.prevPage = function () {
                if (self.indexPage() > 0) {
                    self.indexPage(self.indexPage() - 1);
                    self.loadhoc();
                }
            }

            self.loadhoc = function () {
                self.hocs.removeAll();
                var recID = document.getElementById("recId").value;
               // alert(recID);
                $.ajax('@Url.Action("GetKioskPostData", "CMCSetup")', {
                    data: ko.toJSON({
                        search: self.formVendorSearch(),
                        pageSize: self.pageSize(),
                        pageIndex: self.indexPage(),
                        recid:recID,
                    }),
                    type: "post",
                    contentType: "application/json",
                    success: function (result) {
                        self.hocs.removeAll();
                        var underlyingArray = self.hocs();
                        for (var i = 0; i < result.hocs.length; i++) {
                            var row = result.hocs[i];
                            var record = {
                                ID: row.ID,
                                KioskPostCode: row.KioskPostCode,
                                KioskPostName: row.KioskPostName,
                                BankName: row.BankName,
                                AccountNumber: row.AccountNumber,
                                AccountType: row.AccountType,
                                ReferenceNo: row.ReferenceNo,
                                EmailAddress: row.EmailAddress,
                                ContactPerson: row.ContactPerson,
                                IsActive: row.IsActive,
                                DetailURL: row.DetailURL,
                                PostKioskURL: row.PostKioskURL,
                                ShowButton: row.ShowButton,
                            }
                            underlyingArray.push(record);
                        }
                        self.hocs.valueHasMutated();
                        self.totalPage(result.totalPage);
                        self.totalRow(result.totalRow);
                        $('#dialog-Loading').dialog("close");
                    },
                    error: function (error) {
                        $.notify(
                            error.responseText, {
                                position: "top center",
                                className: "error"
                            }
                        );
                        $('#dialog-Loading').dialog("close");
                    }
                });
            }

                self.restartSearchPagination = function () {
                self.hocs.removeAll();
                self.indexPage(0);
                self.totalPage(1);
                self.totalRow(0);
            }
            self.formVendorSearch.subscribe(function (value) {
                if (value == '') self.formVendorSearch("");

                self.restartSearchPagination();
                self.loadhoc();
            });
            self.pageSize.subscribe(function (value) {
                if (self.formVendorSearch() == '') self.formVendorSearch("");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.vendorsComputed = ko.computed(function () {
                var records = self.hocs;
                return records;
            });
            
            self.loadhoc();

    };


        $(document).ready(function () {

            $('#StartDate').datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
            }).datepicker("setDate", new Date());

            ko.applyBindings(ViewModel);
        });


    function openForm() {
        document.getElementById("myForm").style.display = "block";
    }

    function closeForm() {
          document.getElementById("myForm").style.display = "none";
    }
    </script>
}

