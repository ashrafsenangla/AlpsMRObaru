@model Core.Entities.Data.MISC.WeaponMovement
@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "Weapon Sign In/ Sign Out";}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

}

<div class="col-lg-12">
    <div class="ibox float-e-margins">
        <div class="ibox-content" style="background-color:#f7f5f5;">
            <div class="col-md-12">
                <div class="form-group">
                    <label style="font-weight:bolder;" class="pull-left btn btn-xs btn-primary btn-block">Weapon Sign In/Sign Out Info</label>
                </div>
                <div class="welldetailsContactedit" style="background-color:#c8faf0;">
                    <br />
                    <div class="wellpob" style="min-height:60px;  padding:5px; background-color:#c8faf0;">
                        <div class="circle-border">
                            <div class="col-lg-4">
                                <div class="row">
                                    @Html.LabelFor(model => model.BusinessUnit, "Business Unit", new { @class = "control-label col-md-3", @style = "padding-top:5px" })
                                    <div class="col-md-8">
                                        @Html.DropDownList("BusinessUnit", (IEnumerable<SelectListItem>)Session[""], " < Select Business Unit >", new { @id = "bizUnit", @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                        @Html.ValidationMessageFor(model => model.BusinessUnit)
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="row">
                                    @Html.LabelFor(model => model.BranchID, "Branch", new { @class = "control-label col-md-2", @style = "padding-top:5px" })
                                    <div class="col-md-8">
                                        @Html.DropDownList("BranchID", (IEnumerable<SelectListItem>)Session[""], " < Select Branch >", new { id = "branchID", @class = "form-control", @disabled = "disabled", @required = "required", @style = "background-color: #edfcf9;font-size:11px;height:30px;" })
                                        @Html.ValidationMessageFor(model => model.BranchID)
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="row">
                                    @Html.LabelFor(model => model.WeaponID, "Serial No", new { @class = "control-label col-md-2", @style = "padding-top:5px" })
                                    <input type="hidden" name="mvmtId" id="recId" value="@ViewBag.MovementID" />
                                    @Html.TextBox("WeaponID", ViewData["SerialNo"], new { @id = "serialNo", @class = "form-control", @readonly = "readonly", @style = "width: 120px;background-color: #edfcf9;font-size:12px;height:30px;" })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="row">
                                    @Html.LabelFor(model => model.SignInSignOut, "Sign In/Out", new { @class = "control-label col-md-3", @style = "padding-top:5px;" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.SignInSignOut, new { htmlAttributes = new { id = "signInsignOut", @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:11px;height:30px;" } })
                                        @Html.ValidationMessageFor(model => model.SignInSignOut)
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="row">
                                    @Html.LabelFor(model => model.Status, "Status", new { @class = "control-label col-md-2", @style = "padding-top:5px;" })
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { id = "dailystatus", @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:11px;height:30px;" } })
                                        @Html.ValidationMessageFor(model => model.Status)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-md-12" style="padding-left:20px;padding-top:1px;">
    <div id="scandiv" class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title" style="min-height:23px;">
                Please SCAN Weapon Serial Number & Staff ID.
            </h3>
        </div>
        <div class="panel-body">
            <div class="form-group col-md-5">
                <label>Serial No</label>
                <input type="text" style="height:40px;font-size:30px;color:red;" name="SerialNo" id="SerialNo" class="form-control" required="" />
            </div>
            <div class="form-group col-md-5">
                <label>Staff No#</label>
                <input type="text" style="height:40px;font-size:30px;color:red;" name="StaffNo" id="StaffNo" class="form-control" required="" />
            </div>
            <div class="form-group col-md-1">
                <div style="float: right; display:inline-block; padding-top:20px;">
                    <input class="btn btn-primary" onmouseover="Validation()" name="submitButton" id="btnSave" value="Save" type="button">
                </div>
            </div>

        </div>
    </div><hr />
          <div id="backtolistdiv" class="col-md-offset-5 col-md-9" style="padding-bottom:5px;">
              @Html.ActionLink("Back To Main Page", "Index", null, new { @class = "btn btn-xs btn-primary", @style = "border-color:steelblue;background-color:steelblue; color: white;" })
              <input class="btn btn-primary" onmouseover="Validation()" name="submitButton" id="btnClosed" value="Confirm" type="button">
          </div>
    <div class="form-group">
        <label style="font-weight:bolder;" class="pull-left btn btn-xs btn-primary btn-block">Movement Log</label>
    </div>
    <div class="ibox-content">
        <div class="dataTables_scroll dataTables_wrapper form-inline no-footer">
            <table id="tblList" class="table table-striped table-bordered table-hover dataTables-example">
                <thead>
                    <tr style="background-color:#009999">
                        <th align="left" class="productth">ID</th>
                        <th align="left" class="productth">Sign In/Out Date</th>
                        <th align="left" class="productth">Sign In/Out</th>
                        <th align="left" class="productth">Serial No</th>
                        <th align="left" class="productth">Staff No</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">

    $(function () {
        ShowHide();
        LoadData();
        $("#btnSave").click(function () {

            var std = {};
            std.SerialNo = $("#SerialNo").val();
            std.StaffNo = $("#StaffNo").val();
            std.MovementID = document.getElementById("recId").value;
            var BranchID = document.getElementById("branchID").value;
            var SerialNo = document.getElementById("serialNo").value;
            var customVal = $("#SerialNo").data("value");

            if (std.SerialNo != SerialNo) {
                document.getElementById('serialNo').style.borderColor = "red";
                alert("Invalid Weapon!");
                location.reload(true);
                return false;
            }
            else {
                     $.ajax({
                type: "POST",
                url: '@Url.Action("saveWeaponMvmtDtl")',
                data: '{mvmtrec: ' + JSON.stringify(std) + ', branch : ' + BranchID + '}',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    alert("Data has been added successfully.");
                    LoadData();
                    location.reload(true);
                },
                error: function () {
                    alert("Staff ID Or Invalid Weapon. Please re-enter !!!");
                    location.reload(true);
                }
            });
            }

            return false;
        });
    });


    function LoadData() {
        var movementid = document.getElementById("recId").value;
        $("#tblList tbody tr").remove();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("getWeaponMvmtDtl")',
            dataType: 'json',
            data: '{id: "' + movementid + '" }',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var items = '';
                $.each(data, function (i, item) {
                    var rows = "<tr>"
                    + "<td class='prtoducttd'>" + item.ID + "</td>"
                    + "<td class='prtoducttd'>" + ToJavaScriptDate(item.SignInSignOutDate) + "</td>"
                    + "<td class='prtoducttd'>" + item.SignInSignOut + "</td>"
                    + "<td class='prtoducttd'>" + item.SerialNo + "</td>"
                    + "<td class='prtoducttd'>" + item.StaffNo + "</td>"
                    + "</tr>";
                    $('#tblList tbody').append(rows);
                });
            },
            error: function (ex) {
                var r = jQuery.parseJSON(response.responseText);
                alert("Message: " + r.Message);
                alert("StackTrace: " + r.StackTrace);
                alert("ExceptionType: " + r.ExceptionType);
            }
        });
        return false;
        }


    $(function () {
        $("#btnClosed").click(function () {

        var recId = document.getElementById("recId").value;

             $.ajax({
                type: "POST",
                url: '@Url.Action("closedDaily")',
                data: '{recid: ' + recId + '}',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    alert("Record has been closed successfully.");
                    location.reload(true);
                },
                error: function () {
                    alert("Record already closed !!!");
                    location.reload(true);
                }
            });


            return false;
        });
    });




        function ToJavaScriptDate(value) {
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear() + "  : "+ ("0" + dt.getHours()).slice(-2) + ":"+ ("0" + dt.getMinutes()).slice(-2)+ ":"+ ("0" + dt.getSeconds()).slice(-2);
        }

          $(document).ready(function () {
            $("#SignInSignOutDate").datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            }).datepicker("setDate", new Date());
          });


     function ShowHide() {
         $("#scandiv").show();
         $("#btnClosed").show();

         var status = document.getElementById("dailystatus").value;
         if (status == "Closed") {
             $("#scandiv").hide();
             $("#btnClosed").hide();
         } else {
             $("#scandiv").show();
             $("#btnClosed").show();
         }
    };

    </script>
}