@model Core.Entities.Data.MISC.WeaponMovement
@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "Weapon Sign In/ Sign Out";}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content" style="height:30px; color:white; background-color:#368">
                    <section class="content-header">
                        <h4>
                            @ViewBag.title
                            <small style="color:white">: list of weapon movement</small>
                        </h4>
                    </section>
                </div>
                <div class="ibox-content dataTables_scroll dataTables_wrapper form-inline no-foote" style="min-height:40px; padding-left:20px;color:black; background-color:#368">
                    @Html.LabelFor(model => model.BusinessUnit, "Business Unit", new { @class = "col-sm-1", @style = "padding-top:5px" })
                    <div class="col-sm-2">
                        @Html.DropDownList("BusinessUnit", (IEnumerable<SelectListItem>)Session[""], " < Select Business Unit >", new { @id = "bizUnit", @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "width:170px;background-color: #edfcf9;font-size:11px;height:30px;" })
                    </div>
                    @Html.LabelFor(model => model.BranchID, "Branch", new { @class = "col-sm-1", @style = "padding-top:5px" })
                    <div class="col-sm-2">
                        @Html.DropDownList("BranchID", (IEnumerable<SelectListItem>)Session[""], " < Select Business Unit >", new { @id = "branchID", @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "width:170px;background-color: #edfcf9;font-size:11px;height:30px;" })
                    </div>
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.WeaponID, "Serial No", new { @class = "col-sm-3", @style = "padding-top:5px" })
                        <input type="hidden" name="mvmtId" id="recId" value="@ViewBag.MovementID" />
                        @Html.TextBox("WeaponID", ViewData["SerialNo"], new { @id = "serialNo", @class = "form-control", @readonly = "readonly", @style = "width:170px;background-color: #edfcf9;font-size:12px;height:30px;" })
                    </div>
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.SignInSignOut, "Status", new { @class = "col-xs-2", @style = "padding-top:5px" })
                        <div class="col-sm-1">
                            @Html.EditorFor(model => model.SignInSignOut, new { htmlAttributes = new { id = "signInsignOut", @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:11px;height:30px;" } })
                        </div>
                    </div>

                </div>

                <div class="ibox-content dataTables_scroll dataTables_wrapper form-inline no-foote" style="min-height:40px; padding-left:30px;color:black; background-color:#368">
                    <div class="dataTables_filter dataTables_length dataTables_length pull-right">
                        <label>
                            <select class="form-control input-sm" style="width:80px;font-size:11px" data-bind="value:pageSize">
                                <option value="10">10/page</option>
                                <option value="25">25/page</option>
                                <option value="50">50/page</option>
                                <option value="100">100/page</option>
                            </select>
                        </label>
                        <label><input type="text" class="form-control input-sm" id="search" style="width:100px;font-size:11px" data-bind="value: formVendorSearch, valueUpdate: 'keyup'" placeholder="Search">&nbsp;&nbsp;&nbsp;</label>
                        <div class="dataTables_filter dataTables_length dataTables_length pull-right">
                            @Html.ActionLink("Previous Page", "Index", null, new { @class = "btn btn-xs btn-primary pull-left", @style = "border-color:steelblue;background-color:steelblue; color: white;" })
                            @*<button id="createweaponDaily" onclick="Validation();" class="pull-left btn btn-primary btn-xs" style="margin-left:5px; margin-right:5px">SCAN WEAPON</button>*@
                            <button id="createweaponDaily" onclick="openForm();" class="pull-left btn btn-primary btn-xs" style="margin-left:5px; margin-right:5px">SCAN WEAPON</button>

                        </div>
                    </div>
                </div>

                <div class="ibox-content">
                    <div class="dataTables_scroll dataTables_wrapper form-inline no-footer">
                        <table id="mainTable" class="table table-striped table-bordered table-hover dataTables-example">
                            <thead>
                                <tr>
                                    <td></td>
                                    <td data-bind="style : {width: '8%' } ">
                                        <select class="form-control input-xs" data-bind="options:availableSignInSignOut, value:selectedSignInSignOut" style="font-size:11px; height:30px"></select>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td data-bind="style : {width: '8%' } ">
                                        <select class="form-control input-xs" data-bind="options:availableBranch, value:selectedBranch" style="font-size:11px; height:30px"></select>
                                    </td>
                                    <td data-bind="style : {width: '1%' } "></td>
                                </tr>
                                <tr>
                                    <th>Serial No</th>
                                    <th>Sign In/Out</th>
                                    <th>Sign In/OutDate </th>
                                    <th>Staff#</th>
                                    <th>Name</th>
                                    <th>Branch</th>
                                    <th><input name="select_all" type="hidden" disabled></th>
                                </tr>
                            </thead>
                            <tbody data-bind="dataTablesForEach:
                                   @Html.Partial("_IndexColumn7")
                                <tr>
                                    <td data-bind="text:SerialNo, style : {width: '10%' } "></td>
                                    <td data-bind="text:SignInSignOut, style : {width: '10%' } "></td>
                                    <td data-bind="text:SignInSignOutDate, style : {width: '15%' } "></td>
                                    <td data-bind="text:StaffNo, style : {width: '8%' } "></td>
                                    <td data-bind="text:StaffName, style : {width: '20%' } "></td>
                                    <td data-bind="text:BranchName, style : {width: '8%' } "></td>
                                    <td></td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="dataTables_info">
                            Showing <label data-bind="text: totalRow()==0 ? 0 : (indexPage()*pageSize())+1"></label> to <label data-bind="text: (indexPage()+1)*pageSize() > totalRow() ? totalRow():(indexPage()+1)*pageSize()"></label> of <label data-bind="text: totalRow"></label> entries
                        </div>
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination">
                                <li class="paginate_button previous" data-bind="click: prevPage, disable: indexPage()==0, css: { 'disabled': indexPage()==0}" tabindex="0"><a href="#">Previous</a></li>
                                <li class="paginate_button active" tabindex="0"><a href="#"><label data-bind="text: indexPage()+1"></label></a></li>
                                <li class="paginate_button next" data-bind="click: nextPage, disable: (indexPage()+1)==totalPage(), css: { 'disabled': (indexPage()+1)==totalPage()}" tabindex="0"><a href="#">Next</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div  id="myForm" class="form-popup" style="">
    <div id="scandiv" class="panel panel-primary" style="min-width:400px;min-height:300px;">
        <div class="panel-heading">
            <h3 class="panel-title" style="min-height:15px;">
                Please SCAN Weapon Serial Number & Staff ID.
            </h3>
        </div>
        <div class="panel-body">
            <center>
                <div class="form-group col-md-4">
                    <label>Serial No</label>
                    @*<input type="text" id="txtInput">*@
                    <input type="text"  autocomplete='off' style="height:40px;font-size:30px;background-color:green;color:white;" name="noweapon" id="noweapon" class="no-copy-paste image-box required form-control" required="" />
                </div>
                <div class="form-group col-md-4">
                    <label>Staff No#</label>
                    @*<input onchange="StaffRec()" type="text" style="height:40px;font-size:30px;color:red;background-color:green;color:white;" name="StaffNo" id="StaffNo" class="form-control" required="" />*@
                    @*<input type="text" style="height:40px;font-size:30px;color:red;background-color:green;color:white;" name="StaffNo" id="StaffNo" class="no-copy-paste image-box required form-control" required="" />*@
                    @*<input type="text" value="readonly" autocomplete='off' style="height:40px;font-size:30px;background-color:green;color:white;" name="StaffNo" id="StaffNo" class="no-copy-paste image-box required form-control" required="" />*@
                    <input type="text"  autocomplete='off' style="height:40px;font-size:30px;background-color:green;color:white;" name="noweapon" id="StaffNo" class="no-copy-paste image-box required form-control" required="" />

                </div>
            </center>
          
            <div class="form-group col-md-4">
            <label>Purpose</label>
            @Html.DropDownList("MvmtType", (IEnumerable<SelectListItem>)Session[""], " < Select Purpose >", new { @id = "mvmttype", @class = "form-control", @required = "required", @style = "width:200px;font-size:15px;height:40px;" })
        </div>
            <div class="panel-heading">
                @*<h3 class="panel-title" style="min-height:23px;">
                Remarks(if any):
                </h3>*@
                @*<input type="text" style="height:40px;font-size:30px;color:red;" name="StaffNo" id="StaffNo" class="form-control" required="" />*@
                @Html.TextArea("txtComments", htmlAttributes: new { @id = "remark", @style = "width: 450px;min-height:60px;", @placeholder = "Enter Remarks here" })
            </div>
            <div class="form-group" style="padding-top:20px;">
                <input class="btn btn-primary" onclick="Validation()" name="submitButton" id="btnSave" value="Save" type="button">
                <button type="button" class="btn cancel btn btn-xs btn-primary" onclick="closeForm()">Close</button>
                <button type="button" class="btn cancel btn btn-xs btn-white" style="color:black" onclick="resetForm()">Reset</button>
            </div>
        </div>
    </div><hr />
  
</div>



@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Scripts/plugins/jquery-ui/jqueryuiStyles")
    @Styles.Render("~/plugins/dataPickerStyles")

    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
        }

        * {
            box-sizing: border-box;
        }

       
        .required:after {
            content: "*";
            font-weight: bold;
            color: red;
        }

        /* Button used to open the contact form - fixed at the bottom of the page */
        .open-button {
            background-color: #bdb7b7;
            color: white;
            padding: 16px 20px;
            border: none;
            cursor: pointer;
            opacity: 0.8;
            position: fixed;
            bottom: 23px;
            right: 28px;
            min-width: 280px;
        }

        /* The popup form - hidden by default */
        .form-popup {
            display: none;
            position: fixed;
            bottom: 150px;
            right: 50px;
            left:250px;
            border: 3px solid #f1f1f1;
            z-index: 9;
        }

        /* Add styles to the form container */
        .form-container {
            max-width: 600px;
            padding: 10px;
            background-color: #ddd;
        }

            /* Full-width input fields */
            .form-container input[type=text], .form-container input[type=password] {
                width: 100%;
                padding: 15px;
                margin: 5px 0 22px 0;
                border: none;
                background: #f1f1f1;
            }

                /* When the inputs get focus, do something */
                .form-container input[type=text]:focus, .form-container input[type=password]:focus {
                    background-color: #ddd;
                    outline: none;
                }

            /* Set a style for the submit/login button */
            .form-container .btn {
                background-color: #4CAF50;
                color: white;
                padding: 16px 20px;
                border: none;
                cursor: pointer;
                width: 100%;
                margin-bottom: 10px;
                opacity: 0.8;
            }

            /* Add a red background color to the cancel button */
            .form-container .cancel {
                background-color: red;
            }

            /* Add some hover effects to buttons */
            .form-container .btn:hover, .open-button:hover {
                opacity: 1;
            }

        .ui-dialog-3000 {
            z-index: 3000 !important;
        }

        .ui-dialog-2900 {
            z-index: 2900 !important;
        }

        .disable-background-eee {
            background: #eee !important;
        }

        .modal {
            margin: auto;
            padding-top: 100px;
            min-height: 500px;
            width: 1200px;
        }

        .wizard > .content {
            min-height: 450px !important;
        }

        .ui-dialog-title {
            text-transform: none !important;
        }

        .dataTables_scroll {
            overflow: auto;
            position: relative;
        }

        .ui-widget {
            font-family: 'open sans', 'Helvetica Neue', 'Helvetica', Arial, sans-serif !important;
        }

        .no-titlebar .ui-dialog-titlebar {
            display: none;
        }

        .no-titlebar-round .ui-dialog-titlebar {
            display: none;
        }

        .no-titlebar-round {
            border-radius: 5px !important;
        }

        .font-danger {
            color: #ed5565 !important;
            font-weight: bold;
        }

        #header-fixed {
            position: fixed;
            top: 0px;
            display: none;
            background-color: white;
        }

        .numberCircle {
            border-radius: 50%;
            behavior: url(PIE.htc); /* remove if you don't care about IE8 */
            width: 20px;
            height: 20px;
            padding: 0px;
            background: #1AB394;
            border: 1px solid #1AB394;
            text-align: center;
            color: white;
            font: 10px;
        }

        .datepicker {
            z-index: 3000 !important; /*Date Picker in knockout*/
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/notifyjs")

    <script type="text/javascript">

    $(document).ready(function() {
    var ctrlDown = false,
        ctrlKey = 17,
        cmdKey = 91,
        vKey = 86,
        cKey = 67;

    $(document).keydown(function(e) {
        if (e.keyCode == ctrlKey || e.keyCode == cmdKey) ctrlDown = true;
    }).keyup(function(e) {
        if (e.keyCode == ctrlKey || e.keyCode == cmdKey) ctrlDown = false;
    });

    $(".no-copy-paste").keydown(function(e) {
        if (ctrlDown && (e.keyCode == vKey || e.keyCode == cKey)) return false;
    });
    
    // Document Ctrl + C/V 
    $(document).keydown(function(e) {
        if (ctrlDown && (e.keyCode == cKey)) console.log("Document catch Ctrl+C");
        if (ctrlDown && (e.keyCode == vKey)) console.log("Document catch Ctrl+V");
    });
    });

        
    $(function () {

            //setTimeout('timedRefresh()', 300000);
            //setTimeout('refocus()', 1000);
            ////********** KEYPRESS PREVENTION
            //$(document).ready(function () {
            //    $("#txtInput").keypress(function () {
            //        setTimeout('refocus()', 700)
            //    });
            //});

            ////********** PASTE PREVENTION $(document).ready(function(){
            //$(document).on("cut copy paste", "#txtInput", function (e) {
            //    e.preventDefault();
            //}); 


            var delay = (function () {
                var timer = 0;
                return function (callback, ms) {
                    clearTimeout(timer);
                    timer = setTimeout(callback, ms);
                };
            })();

            $("#noweapon").on("input", function () {
                delay(function () {
                    if ($("#noweapon").val().length < 8) {
                        $("#noweapon").val("");
                    }
                }, 20);
            });

           $("#StaffNo").on("input", function () {
                delay(function () {
                    if ($("#StaffNo").val().length < 8) {
                        $("#StaffNo").val("");
                    }
                }, 20);
            });

        $("#btnSave").click(function () {
            var std = {};
            std.SerialNo = $("#noweapon").val();
            std.MovementID = document.getElementById("recId").value;
            var serialParent = document.getElementById("serialNo").value;
            var StaffNumber = document.getElementById("StaffNo").value;
            var BranchID = document.getElementById("branchID").value;
          //  var MvmtType = document.getElementById("mvmttype").value;
            var Remark = document.getElementById("remark").value;

            

             var url = "/WeaponMovement/CheckGuardname";
                  $.post(url, { staffno: StaffNumber }, function (data) {
                    $("#msg").html(data);
                      alert(staffnm);
                  });

            if (std.SerialNo != serialParent) {
                alert("Invalid Weapon!");
                document.getElementById("noweapon").value = "";
                document.getElementById("StaffNo").value = "";
                document.getElementById("remark").value = "";
                //location.reload(true);
                //return false;
            }
            else {
     
              $.ajax({
                type: "POST",
                url: '@Url.Action("saveWeaponMvmtDtl")',
                data: '{  branch : ' + BranchID + ',   mvmtrec: ' + JSON.stringify(std) + ', staffnumber : "' + StaffNumber + '", remarks : "' + Remark + '" }',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    alert("Data has been added successfully.");
                    location.reload(true);
                },
                error: function () {
                    alert("Staff ID, Invalid Weapon or Purpose. Please re-enter !!!");
                    location.reload(true);
                }
            });
            }

            return false;
        });
    });



         $(document).ready(function () {
            $('#StartDate').datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
            }).datepicker("setDate", new Date());

            ko.applyBindings(ViewModel);
            ViewModel.loadhoc();

        });

    function StaffRec() {
         var StaffNumber = document.getElementById("StaffNo").value;
            $('#dialog-Loading').dialog("open");
            $.ajax({
                type: "POST",
                url: "@Url.Action("CheckGuardname", "WeaponMovement")",
                data: {  staffno: StaffNumber },
                success: function (data) {
                     alert(staffno);
                },
                error: function (data) {
                    alert("Invalid Staff !!!");
                    document.getElementById("StaffNo").value = "";
                     $('#dialog-Loading').dialog("close");
                },

                dataType: "json",
                traditional: true
            });
    }


    function GetWeaponMvmt() {
        document.getElementById("search").value = "";
            $('#dialog-Loading').dialog("open");
            $.ajax({
                type: "POST",
                url: "@Url.Action("CreateWeaponMvmtSummary", "WeaponMovement")",
                data: {  branch: $("#Branch").val() },
                success: function (data) {
                    $('#dialog-Loading').dialog("close");
                    alert(data);
                     $('#StartDate').val('18/10/2019');
                     location.reload();
                },
                dataType: "json",
                traditional: true
            });
    }

    function Validation() {

        if (startdate == "") {
            return false;
        }
        else {

            if (location == "") {
                return false;
            }
            else {
                GetWeaponMvmt();
            }
        }
    }

        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "customDate-pre": function (a) {
                var ukDatea = a.split('/');
                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },

            "customDate-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            "customDate-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });
        Date.prototype.toFormattedDate = function () {
            var dd = this.getDate();
            if (dd < 10) dd = '0' + dd;
            var mm = this.getMonth() + 1;
            if (mm < 10) mm = '0' + mm;
            var yyyy = this.getFullYear();
            /* change format here */
            return String(dd + "/" + mm + "/" + yyyy);
        };

        var MSR = function (data) {
            var self = this;
            this.BranchName = ko.observable(data.BranchName);
            this.SerialNo = ko.observable(data.SerialNo);
            this.SignInSignOut = ko.observable(data.SignInSignOut);
            this.SignInSignOutDate = ko.observable(data.SignInSignOutDate);
            this.StaffNo = ko.observable(data.StaffNo);
            this.StaffName = ko.observable(data.StaffName);
            this.DetailURL = ko.observable(data.DetailURL);
            this.ShowButton = ko.observable(data.ShowButton);
        };

        var ViewModel = new function () {
            var self = this;
            var defaultDropdownText = 'All';
          //  var defaultDropdownTextStatus = 'Draft';
         //   var defaultdate = new Date().toFormattedDate();
            self.pageSize = ko.observable(10);
            self.indexPage = ko.observable(0);
            self.totalPage = ko.observable(1);
            self.totalRow = ko.observable(0);
            self.hocs = ko.observableArray([]);
            self.formVendorSearch = ko.observable("");

            var defaultdate = new Date().toFormattedDate();

           self.availableSignInSignOut = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.SignInSignOut){<text>'@item',</text>}]);
           self.availableBranch = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.BranchDesc){<text>'@item',</text>}]);

            self.selectedBranch = ko.observable(defaultDropdownText);
            self.selectedSignInSignOut = ko.observable(defaultDropdownText);

            self.nextPage = function () {
                if ((self.indexPage() + 1) < self.totalPage()) {
                    self.indexPage(self.indexPage() + 1);
                    self.loadhoc();
                }
            }
            self.prevPage = function () {
                if (self.indexPage() > 0) {
                    self.indexPage(self.indexPage() - 1);
                    self.loadhoc();
                }
            }

            self.loadhoc = function () {
                self.hocs.removeAll();
                var recID = document.getElementById("recId").value;
                $.ajax('@Url.Action("GetWeaponMvmtDtl", "WeaponMovement")', {
                    data: ko.toJSON({
                        search: self.formVendorSearch(),
                        pageSize: self.pageSize(),
                        pageIndex: self.indexPage(),
                        recid: recID,
                        branchname: self.selectedBranch(),
                        signinsignout: self.selectedSignInSignOut(),

                    }),
                    type: "post",
                    contentType: "application/json",
                    success: function (result) {
                        self.hocs.removeAll();
                        var underlyingArray = self.hocs();
                        for (var i = 0; i < result.hocs.length; i++) {
                            var row = result.hocs[i];
                            var record = {
                                SerialNo: row.SerialNo,
                                BranchName: row.BranchName,
                                SignInSignOut: row.SignInSignOut,
                                SignInSignOutDate: row.SignInSignOutDate,
                                StaffNo: row.StaffNo,
                                StaffName: row.StaffName,
                                DetailURL: row.DetailURL,
                                ShowButton: row.ShowButton,
                            }
                            underlyingArray.push(record);
                        }
                        self.hocs.valueHasMutated();
                        self.totalPage(result.totalPage);
                        self.totalRow(result.totalRow);
                        $('#dialog-Loading').dialog("close");

                    },
                    error: function (error) {
                        $.notify(
                            error.responseText, {
                                position: "top center",
                                className: "error"
                            }
                        );
                        $('#dialog-Loading').dialog("close");
                    }
                });
            }

                self.restartSearchPagination = function () {
                self.hocs.removeAll();
                self.indexPage(0);
                self.totalPage(1);
                self.totalRow(0);
            }
            self.formVendorSearch.subscribe(function (value) {
                if (value == '') self.formVendorSearch("");

                self.restartSearchPagination();
                self.loadhoc();
            });
            self.pageSize.subscribe(function (value) {
                if (self.formVendorSearch() == '') self.formVendorSearch("");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.vendorsComputed = ko.computed(function () {
                var records = self.hocs;
                return records;
            });
             self.selectedSignInSignOut.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
             });
             self.selectedBranch.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
              });
    };


    $(".use-address").click(function() {
    var $row = $(this).closest("tr");    // Find the row
    var $text = $row.find(".nr").text(); // Find the text

    // Let's test it out
    alert($text);
    });

      $(document).ready(function () {

            $("#dialog-Route").dialog({
                open: function (event, ui) {
                    $(this).parent().children().children('.ui-dialog-titlebar-close').hide();
                    $(this).parent().addClass('ui-dialog-2900');
                },
                autoOpen: false,
                height: 700,
                width: 1050,
                modal: true,
                dialogClass: "no-titlebar"
            }).css({ "font-family": "'open sans', 'Helvetica Neue', 'Helvetica', Arial, sans-serif", "font-size": "12px" });

      });

    function openForm() {
        document.getElementById("myForm").style.display = "block";
        document.getElementById("noweapon").value = "";
        document.getElementById("StaffNo").value = "";
        document.getElementById("remark").value = "";

    }

    function closeForm() {
        document.getElementById("myForm").style.display = "none";
            }

    function resetForm() {
        document.getElementById("noweapon").value = "";
        document.getElementById("StaffNo").value = "";
        document.getElementById("Remarks").value = "";
    
    }


    </script>
}

