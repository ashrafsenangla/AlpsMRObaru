@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "List Of Weapon";}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title " style="padding-top:40px;">
                </div>
                <div class="ibox-content">
                    <div class="form-group">
                        <label style="background-color:lightgray;border-color:lightgray;font-weight:bolder" class="pull-left btn btn-xs btn-white btn-block">List Of Weapon</label>
                    </div>
                    <div class="dataTables_wrapper form-inline no-footer" style="padding-top:30px;">
                        @Html.Partial("_IndexBody")
                        <table id="mainTable" class="display table table-striped table-bordered table-hover dataTables-example">
                            <thead>
                                <tr>

                                    <td data-bind="style : {width: '10%', height: '10px' } ">
                                        <select data-bind="options:availableBranch, value:selectedBranchName" class="form-control input-xs" style="font-size:12px;height:30px;"></select>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td data-bind="style : {width: '10%' } ">
                                        <select data-bind="options:availableCalibre, value:selectedCalibreName" class="form-control input-xs" style="font-size:12px;height:30px"></select>
                                    </td>
                                    <td data-bind="style : {width: '10%' } ">
                                        <select data-bind="options:availableMaker, value:selectedMakerName" class="form-control input-xs" style="font-size:12px;height:30px"></select>
                                    </td>
                                    <td data-bind="style : {width: '10%' } ">
                                        <select data-bind="options:availableWeaponType, value:selectedWeaponTypeName" class="form-control input-xs" style="font-size:12px;height:30px"></select>
                                    </td>
                                    <td data-bind="style : {width: '10%' } ">
                                        <select data-bind="options:availableStatus, value:selectedStatusName" class="form-control input-xs" style="font-size:12px;height:30px"></select>
                                    </td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Branch</th>
                                    <th>Serial No</th>
                                    <th>Model Name</th>
                                    <th>Calibre</th>
                                    <th>Maker</th>
                                    <th>Type</th>
                                    <th>Status</th>
                                    <th>Active?</th>
                                    <th><input name="select_all" type="hidden"></th>

                                </tr>
                            </thead>
                            <tbody data-bind="dataTablesForEach:
                                   @Html.Partial("_IndexColumn9")
                                <tr>
                                    <td data-bind="style : {width: '10%' } ">
                                        <span data-bind="text:BranchName"></span>
                                    </td>
                                    <td data-bind="text:SerialNo, style : {width: '10%' } "></td>
                                    <td data-bind="text:ModelName, style : {width: '20%' } "></td>
                                    <td data-bind="text:Calibre, style : {width: '10%' } "></td>
                                    <td data-bind="text:Maker, style : {width: '10%' } "></td>
                                    <td data-bind="text:WeaponType, style : {width: '10%' } "></td>
                                    <td data-bind="text:Status, style : {width: '10%' } "></td>
                                    <td data-bind="text:IsActive, style : {width: '10%' } "></td>
                                    <td data-bind="style : {width: '4%' } ">
                                        <a data-bind="visible:ShowButton==true,attr: { href: DetailURL}" title="Click To View" style="font-size:11px" class="btn-primary">View</a>
                                    </td>

                                </tr>
                            </tbody>
                        </table>
                        @Html.Partial("_IndexPage")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Scripts/plugins/jquery-ui/jqueryuiStyles")
    <style>
        .ui-dialog-3000 {
            z-index: 3000 !important;
        }

        .ui-dialog-2900 {
            z-index: 2900 !important;
        }

        .disable-background-eee {
            background: #eee !important;
        }

        .dropdownstyle {
            font-size: 12px;
            height: 30px;
        }

        .backgroundSelected {
            background-color: rgb(102, 204, 204) !important;
        }

        .label_p {
            display: inline-block;
            max-width: 100%;
            margin-bottom: 0px;
            font-weight: normal !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/notifyjs")

    <script type="text/javascript">

        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "customDate-pre": function (a) {
                var ukDatea = a.split('/');
                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },

            "customDate-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            "customDate-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });
        Date.prototype.toFormattedDate = function () {
            var dd = this.getDate();
            if (dd < 10) dd = '0' + dd;
            var mm = this.getMonth() + 1;
            if (mm < 10) mm = '0' + mm;
            var yyyy = this.getFullYear();
            /* change format here */
            return String(dd + "/" + mm + "/" + yyyy);
        };

        var MSR = function (data) {
            var self = this;
            this.ModelName = ko.observable(data.ModelName);
            this.SerialNo = ko.observable(data.SerialNo);
            this.Calibre = ko.observable(data.Calibre);
            this.Maker = ko.observable(data.Maker);
            this.WeaponType = ko.observable(data.WeaponType);
            this.Status = ko.observable(data.Status);
            this.IsActive = ko.observable(data.IsActive);
            this.BranchName = ko.observable(data.BranchName);
            this.BusinessUnitName = ko.observable(data.BusinessUnitName);
            this.DetailURL = ko.observable(data.DetailURL);
            this.ShowButton = ko.observable(data.ShowButton);
        };

        var ViewModel = new function () {
            var self = this;
            var defaultDropdownText = 'All';
          //  var defaultDropdownTextStatus = 'Draft';
         //   var defaultdate = new Date().toFormattedDate();
            self.pageSize = ko.observable(10);
            self.indexPage = ko.observable(0);
            self.totalPage = ko.observable(1);
            self.totalRow = ko.observable(0);
            self.hocs = ko.observableArray([]);
            self.formVendorSearch = ko.observable("");

            var defaultdate = new Date().toFormattedDate();
           self.availableBranch = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.BranchDesc){<text>'@item',</text>}]);
           self.availableBusinessUnit = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.BusinessUnitDesc){<text>'@item',</text>}]);
           self.availableCalibre = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.CalibreDesc){<text>'@item',</text>}]);
           self.availableMaker = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.MakerDesc){<text>'@item',</text>}]);
           self.availableWeaponType = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.WeaponTypeDesc){<text>'@item',</text>}]);
           self.availableStatus = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.StatusDesc){<text>'@item',</text>}]);

            self.selectedBranchName = ko.observable(defaultDropdownText);
            self.selectedBusinessUnitName = ko.observable(defaultDropdownText);
            self.selectedCalibreName = ko.observable(defaultDropdownText);
            self.selectedMakerName = ko.observable(defaultDropdownText);
            self.selectedWeaponTypeName = ko.observable(defaultDropdownText);
            self.selectedStatusName = ko.observable(defaultDropdownText);

            self.nextPage = function () {
                if ((self.indexPage() + 1) < self.totalPage()) {
                    self.indexPage(self.indexPage() + 1);
                    self.loadhoc();
                }
            }
            self.prevPage = function () {
                if (self.indexPage() > 0) {
                    self.indexPage(self.indexPage() - 1);
                    self.loadhoc();
                }
            }

            self.loadhoc = function () {
                self.hocs.removeAll();

                $.ajax('@Url.Action("GetWeapon", "Weapon")', {
                    data: ko.toJSON({
                        search: self.formVendorSearch(),
                        pageSize: self.pageSize(),
                        pageIndex: self.indexPage(),
                        businessunitname: self.selectedBusinessUnitName(),
                        branchname: self.selectedBranchName(),
                        calibrename: self.selectedCalibreName(),
                        makername: self.selectedMakerName(),
                        weapontype: self.selectedWeaponTypeName(),
                        status: self.selectedStatusName(),
                    }),
                    type: "post",
                    contentType: "application/json",
                    success: function (result) {
                        self.hocs.removeAll();
                        var underlyingArray = self.hocs();
                        for (var i = 0; i < result.hocs.length; i++) {
                            var row = result.hocs[i];
                            var record = {

                                BranchName: row.BranchName,
                                BusinessUnitName: row.BusinessUnitName,
                                ModelName: row.ModelName,
                                SerialNo: row.SerialNo,
                                Calibre: row.Calibre,
                                SerialNo: row.SerialNo,
                                Status: row.Status,
                                IsActive: row.IsActive,
                                Maker: row.Maker,
                                WeaponType: row.WeaponType,
                                DetailURL: row.DetailURL,
                                ShowButton: row.ShowButton,
                            }
                            underlyingArray.push(record);
                        }
                        self.hocs.valueHasMutated();
                        self.totalPage(result.totalPage);
                        self.totalRow(result.totalRow);
                        $('#dialog-Loading').dialog("close");
                    },
                    error: function (error) {
                        $.notify(
                            error.responseText, {
                                position: "top center",
                                className: "error"
                            }
                        );
                        $('#dialog-Loading').dialog("close");
                    }
                });
            }

                self.restartSearchPagination = function () {
                self.hocs.removeAll();
                self.indexPage(0);
                self.totalPage(1);
                self.totalRow(0);
            }
            self.formVendorSearch.subscribe(function (value) {
                if (value == '') self.formVendorSearch("");

                self.restartSearchPagination();
                self.loadhoc();
            });
            self.pageSize.subscribe(function (value) {
                if (self.formVendorSearch() == '') self.formVendorSearch("");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.vendorsComputed = ko.computed(function () {
                var records = self.hocs;
                return records;
            });
            self.selectedBranchName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
            });
              self.selectedMakerName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
              });
              self.selectedWeaponTypeName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
            });
             self.selectedCalibreName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
             });
             self.selectedStatusName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
            });
              self.selectedBusinessUnitName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
              });
            self.loadhoc();

    };

     $(document).ready(function () {

    //$("#checkAll").click(function () {
    //    $(".checkBox").prop('checked',
    //        $(this).prop('checked'));
    //});

     });

    $('#mainTable tbody').on( 'click', 'tr td:nth-of-type(4)', function (){
    alert("-" );
    });

    $(".use-address").click(function() {
    var $row = $(this).closest("tr");    // Find the row
    var $text = $row.find(".nr").text(); // Find the text

    // Let's test it out
    alert($text);
     });

        $(document).ready(function () {

            $('#StartDate').datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
            }).datepicker("setDate", new Date());

            ko.applyBindings(ViewModel);
        });
    </script>
}

