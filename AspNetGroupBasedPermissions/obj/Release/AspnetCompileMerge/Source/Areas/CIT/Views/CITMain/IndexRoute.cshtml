@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "CIT";}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content" style="height:30px; color:white; background-color:#368">
                    <section class="content-header">
                        <h4>
                            @ViewBag.title
                            <small style="color:white">: list of routing by date</small>
                        </h4>
                    </section>
                </div>
                <div class="ibox-content dataTables_scroll dataTables_wrapper form-inline no-foote" style="min-height:40px; color:black; background-color:#368">
                    <div class="ibox-tools">
                        <input type="button" id="btnGetData" class="btn btn-xs btn-google-plus" value="Show Location" style=" font-size:12px;padding-left:3px;padding-right:3px;padding-bottom:3px;background:#ffd800;padding-top:3px;width:90px;height:30px; " onclick="GetLocation()" />
                    </div>
                    <div class="ibox-tools">
                        <input type="button" id="btnGetRoutex" class="btn btn-xs btn-google-plus" value="Show Route" style=" font-size:12px;padding-left:3px;padding-right:3px;padding-bottom:3px;padding-top:3px;width:80px;height:30px; " onclick="GetRoute()"/>&nbsp;
                    </div>
                    <div class="ibox-tools" style="padding-right:5px;">
                        @Html.ActionLink("Create", "Create", null, new { @class = "modal-link  pull-right btn btn-xs btn-primary btn-block", @style = "font-size:12px;padding-left:3px;padding-right:3px;padding-bottom:3px;padding-top:3px;width:79px;height:30px; " })
                    </div>
                    <div class="ibox-tools pull-left">
                        <label style="padding-top:5px;color:white">Filter By </label>&nbsp;
                    </div>
                    <div class="ibox-tools pull-left">
                        <select class="form-control input-sm" data-bind="options:availableBusinessUnit, value:selectedBusinessUnitName" style="font-size:12px"></select>&nbsp;
                    </div>
                    <div class="ibox-tools pull-left">
                        <select data-bind="options:availableBranch, value:selectedBranchName" class="form-control input-xs" style="font-size:12px;height:30px"></select>&nbsp;
                    </div>
                    <div class="ibox-tools">
                        &nbsp;
                    </div>
                    <div class="ibox-tools input-group date pull-left" style="padding-bottom:5px;">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        <input class="form-control" style="max-height:30px;max-width:130px;font-size:12px;" id="StartDate" data-bind="value:selectedCITDate">
                    </div>
                    <div class="ibox-tools input-group date pull-left" style="padding-bottom:5px;">
                    </div>
                    <div class="dataTables_length dataTables_length pull-right">
                        <label>
                            <select class="form-control input-sm" style="width:80px;font-size:11px" data-bind="value:pageSize">
                                <option value="10">10/page</option>
                                <option value="25">25/page</option>
                                <option value="50">50/page</option>
                                <option value="100">100/page</option>
                            </select>
                        </label>
                    </div>
                    <div class="dataTables_filter">
                        <label><input type="text" class="form-control input-sm" style="font-size:11px" data-bind="value: formVendorSearch, valueUpdate: 'keyup'" placeholder="Search">&nbsp;&nbsp;&nbsp;</label>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="dataTables_scroll dataTables_wrapper form-inline no-footer">
                        <table id="mainTable" class="table table-striped table-bordered table-hover dataTables-example">
                            <thead>
                                <tr>
                                    <td></td>
                                    <td>
                                        <div class="ibox-tools pull-left">
                                            <select data-bind="options:availableBranch, value:selectedBranchName" class="form-control input-xs" style="font-size:12px;height:30px"></select>&nbsp;
                                        </div>
                                    </td>
                                    <td>
                                        <div class="ibox-tools pull-left">
                                            <select data-bind="options:availableBranch, value:selectedBranchName" class="form-control input-xs" style="font-size:12px;height:30px"></select>&nbsp;
                                        </div>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>

                                    <th>No#</th>
                                    <th>Zone</th>
                                    <th>Team</th>
                                    <th>Customer</th>
                                    <th>Collection Location</th>
                                    <th>Latitude</th>
                                    <th>Longitude</th>
                                    <th>Distance</th>
                                    <th>Estimate Hour</th>
                                    <th>Control#</th>
                                    <th><input name="select_all" type="hidden" disabled></th>
                                </tr>
                            </thead>
                            <tbody data-bind="dataTablesForEach:
                                   @Html.Partial("_IndexColumn11")
                                <tr>
                                    <td data-bind="text:SequenceNo, style : {width: '3%' }"></td>
                                    <td data-bind="text:ZoneID, style : {width: '5%' } "></td>
                                    <td data-bind="text:TeamID, style : {width: '7%' } "></td>
                                    <td data-bind="text:CustomerID, style : {width: '15%' } "></td>
                                    <td data-bind="text:FromLocation, style : {width: '25%' } "></td>
                                    <td data-bind="text:Latitude, style : {width: '25%' } "></td>
                                    <td data-bind="text:Longitude, style : {width: '25%' } "></td>
                                    <td data-bind="text:Distance, style : {width: '7%' } "></td>
                                    <td data-bind="text:EstDuration, style : {width: '7%' } "></td>
                                    <td data-bind="text:ID, style : {width:  '25%' } "></td>
                                    <td></td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="dataTables_info">
                            Showing <label data-bind="text: totalRow()==0 ? 0 : (indexPage()*pageSize())+1"></label> to <label data-bind="text: (indexPage()+1)*pageSize() > totalRow() ? totalRow():(indexPage()+1)*pageSize()"></label> of <label data-bind="text: totalRow"></label> entries
                        </div>
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination">
                                <li class="paginate_button previous" data-bind="click: prevPage, disable: indexPage()==0, css: { 'disabled': indexPage()==0}" tabindex="0"><a href="#">Previous</a></li>
                                <li class="paginate_button active" tabindex="0"><a href="#"><label data-bind="text: indexPage()+1"></label></a></li>
                                <li class="paginate_button next" data-bind="click: nextPage, disable: (indexPage()+1)==totalPage(), css: { 'disabled': (indexPage()+1)==totalPage()}" tabindex="0"><a href="#">Next</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div style="padding-left:25px;">

    <div id="dvDistance">
        <table id="tblResults" border="1" cellpadding="12">
            <tr>
                <th> Record ID </th>
                <th> Sequence </th>
                <th> Start Point</th>
                <th> Collection Location</th>
                <th> Full Address</th>
                <th> Distance </th>
                <th> Estimate Duration </th>
            </tr>
        </table>
    </div>
    <br />
    <div id="dvMap" style="min-height:500px"></div>

</div>


@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Scripts/plugins/jquery-ui/jqueryuiStyles")
    <style>
        .ui-dialog-3000 {
            z-index: 3000 !important;
        }

        .ui-dialog-2900 {
            z-index: 2900 !important;
        }

        .disable-background-eee {
            background: #eee !important;
        }

        .dataTables_scroll {
            overflow: auto;
            position: relative;
        }

        .backgroundSelected {
            background-color: rgb(102, 204, 204) !important;
        }

        .label_p {
            display: inline-block;
            max-width: 100%;
            margin-bottom: 0px;
            font-weight: normal !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/notifyjs")

    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCe2nFHkWtsnzyCOCEExHqgIXcf4OMxBG0" type="text/javascript"></script>

    <script type="text/javascript">

        var source, destination;
        var locations = [];
        var recIDs = [];
        var pushlatitude = [];
        var pushlongitude = [];
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        var Malaysia = new google.maps.LatLng(3.519863, 101.538116);

        var map = new google.maps.Map(document.getElementById('dvMap'), {
            center: { lat: 3.519863, lng: 109.538116 },
            zoom: 6,
            mapTypeId: 'roadmap'
        });

        google.maps.event.addDomListener(window, 'load', function () {
            new google.maps.places.SearchBox(document.getElementById('travelfrom'));
            new google.maps.places.SearchBox(document.getElementById('travelto'));
            directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
        });


        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "customDate-pre": function (a) {
                var ukDatea = a.split('/');
                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },

            "customDate-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            "customDate-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });
        Date.prototype.toFormattedDate = function () {
            var dd = this.getDate();
            if (dd < 10) dd = '0' + dd;
            var mm = this.getMonth() + 1;
            if (mm < 10) mm = '0' + mm;
            var yyyy = this.getFullYear();
            /* change format here */
            return String(dd + "/" + mm + "/" + yyyy);
        };

        var MSR = function (data) {
            var self = this;
            this.ID = ko.observable(data.ID);
            this.BusinessUnitName = ko.observable(data.BusinessUnitName);
            this.BranchName = ko.observable(data.BranchName);
            this.SequenceNo = ko.observable(data.SequenceNo);
            this.CITDate = ko.observable(data.CITDate);
            this.StartingLocation = ko.observable(data.StartingLocation);
            this.FromLocation = ko.observable(data.FromLocation);
            this.FullAddressGoogleMap = ko.observable(data.FullAddressGoogleMap);
            this.FullAddressCombine = ko.observable(data.FullAddressCombine);
            this.Latitude = ko.observable(data.Latitude);
            this.Longitude = ko.observable(data.Longitude);
            this.ZoneID = ko.observable(data.ZoneID);
            this.TeamID = ko.observable(data.TeamID);
            this.CustomerID = ko.observable(data.CustomerID);
            this.Distance = ko.observable(data.Distance);
            this.EstDuration = ko.observable(data.EstDuration);
            this.DetailURL = ko.observable(data.DetailURL);
            this.ShowButton = ko.observable(data.ShowButton);
        };

        var ViewModel = new function () {
            var self = this;
            var defaultDropdownText = 'All';
          //  var defaultDropdownTextStatus = 'Draft';
         //   var defaultdate = new Date().toFormattedDate();
            self.pageSize = ko.observable(100);
            self.indexPage = ko.observable(0);
            self.totalPage = ko.observable(1);
            self.totalRow = ko.observable(0);
            self.hocs = ko.observableArray([]);
            self.formVendorSearch = ko.observable("");

            var defaultdate = new Date().toFormattedDate();
           self.availableBranch = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.BranchDesc){<text>'@item',</text>}]);
           self.availableBusinessUnit = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.BusinessUnitDesc){<text>'@item',</text>}]);

            self.selectedBranchName = ko.observable(defaultDropdownText);
            self.selectedBusinessUnitName = ko.observable(defaultDropdownText);
            self.selectedCITDate = ko.observable(defaultdate);

            self.nextPage = function () {
                if ((self.indexPage() + 1) < self.totalPage()) {
                    self.indexPage(self.indexPage() + 1);
                    self.loadhoc();
                }
            }
            self.prevPage = function () {
                if (self.indexPage() > 0) {
                    self.indexPage(self.indexPage() - 1);
                    self.loadhoc();
                }
            }

            var str_counter_0 = 0;

            self.loadhoc = function () {
                self.hocs.removeAll();

                $.ajax('@Url.Action("GetRouteCIT", "CITMain")', {
                    data: ko.toJSON({
                        search: self.formVendorSearch(),
                        pageSize: self.pageSize(),
                        pageIndex: self.indexPage(),
                        businessunitname: self.selectedBusinessUnitName(),
                        branchname: self.selectedBranchName(),
                        citdate: self.selectedCITDate(),
                       // citdate: "20/10/2019",
                    }),
                    type: "post",
                    contentType: "application/json",
                    success: function (result) {
                        self.hocs.removeAll();
                        var underlyingArray = self.hocs();

                        for (var i = 0; i < result.hocs.length; i++) {
                            var row = result.hocs[i];
                            var record = {
                                ID: row.ID,
                                BranchName: row.BranchName,
                                BusinessUnitName: row.BusinessUnitName,
                                SequenceNo: row.SequenceNo,
                                StartingLocation: row.StartingLocation,
                                FromLocation: row.FromLocation,
                                FullAddressGoogleMap: row.FullAddressGoogleMap,
                                FullAddressCombine: row.FullAddressCombine,
                                Latitude: row.Latitude,
                                Longitude: row.Longitude,
                                CITDate: row.CITDate,
                                ZoneID: row.ZoneID,
                                TeamID: row.TeamID,
                                CustomerID: row.CustomerID,
                                Distance: row.Distance,
                                EstDuration: row.EstDuration,
                                DetailURL: row.DetailURL,
                                ShowButton: row.ShowButton,
                            }
                            underlyingArray.push(record);
                            str_counter_0 = str_counter_0 + 1;
                            if (str_counter_0 <= result.hocs.length) {

                                locations.push(row.FromLocation);
                                recIDs.push(row.ID);
                                pushlatitude.push(row.Latitude);
                                pushlongitude.push(row.Longitude);
                                destinationArray = document.getElementById("destinations");
                               // destinationArray.innerHTML += row.FromLocation + "<br />";

                            }
                        }
                         //alert("Location Luar - " + row.FromLocation);
                        self.hocs.valueHasMutated();
                        self.totalPage(result.totalPage);
                        self.totalRow(result.totalRow);
                        $('#dialog-Loading').dialog("close");

                    },
                    error: function (error) {
                        $.notify(
                            error.responseText, {
                                position: "top center",
                                className: "error"
                            }
                        );
                        $('#dialog-Loading').dialog("close");
                    }
                });
            }

                self.restartSearchPagination = function () {
                self.hocs.removeAll();
                self.indexPage(0);
                self.totalPage(1);
                self.totalRow(0);
            }
            self.formVendorSearch.subscribe(function (value) {
                if (value == '') self.formVendorSearch("");
                self.restartSearchPagination();
                self.loadhoc();
            });
            self.pageSize.subscribe(function (value) {
                if (self.formVendorSearch() == '') self.formVendorSearch("");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.vendorsComputed = ko.computed(function () {
                var records = self.hocs;
                return records;
            });
            self.selectedBranchName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
           
                self.loadhoc();
            });
              self.selectedBusinessUnitName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
              });
             self.selectedCITDate.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
        });
            self.loadhoc();

    };

     $(document).ready(function () {

    //$("#checkAll").click(function () {
    //    $(".checkBox").prop('checked',
    //        $(this).prop('checked'));
    //});

     });

    $('#mainTable tbody').on( 'click', 'tr td:nth-of-type(3)', function (){
     alert("Please scan Staff ID" );
    });
     $('#mainTable tbody').on( 'click', 'tr td:nth-of-type(4)', function (){
      alert("Please scan Weapon" );
     });
     $('#mainTable tbody').on( 'click', 'tr td:nth-of-type(5)', function (){
     alert("Please scan Weapon" );
    });

    $(".use-address").click(function() {
    var $row = $(this).closest("tr");    // Find the row
    var $text = $row.find(".nr").text(); // Find the text

    // Let's test it out
    alert($text);
     });

        $(document).ready(function () {

            $('#StartDate').datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
            }).datepicker("setDate", new Date());

            ko.applyBindings(ViewModel);
            ViewModel.loadhoc();

        });

     

        function GetRoute() {

         var customers = new Array();
            $("#mainTable TBODY TR").each(function () {
                var row = $(this);
                var customer = {};
                customer.SequenceNo = row.find("TD").eq(9).html();
                customer.FromLocation = row.find("TD").eq(4).html();
                customer.Latitude = row.find("TD").eq(5).html();
                customers.push(customer);
            });

             directionsDisplay.setMap(map);
             source = "SRT-EON Security, Kelana Jaya";

            var waypoints = [];
            for (var i = 0; i < customers.length; i++) {
                var address = customers[i].FromLocation;
               // alert(customers[i].FromLocation);

                if (address !== "") {
                    waypoints.push({
                        location: address,
                        stopover: true
                    });
                }
            }

            var recids = [];
            for (var i = 0; i < customers.length; i++) {
                var address = customers[i].SequenceNo;
               // alert(customers[i].SequenceNo);

                if (address !== "") {
                    recids.push({
                        location: address,
                        stopover: true
                    });
                }
            }


            var request = {
                origin: source,
                destination: waypoints[0].location,
                provideRouteAlternatives: false,
                waypoints: waypoints, //an array of waypoints
                optimizeWaypoints: true, //set to true if you want google to determine the shortest route or false to use the order specified.
                travelMode: google.maps.DirectionsTravelMode.DRIVING
                };

          //  alert(waypoints[0].location);
          //  alert(source);

            var trafficLayer = new google.maps.TrafficLayer();
            trafficLayer.setMap(map);

          //  deleteRow("tblResults");
          
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    var distance = 0;
                    var minute = 0.00;
                    
                    response.routes[0].legs.forEach(function (item, index) {
                        if (index < response.routes[0].legs.length - 1) {
                            distance = distance + parseInt(item.distance.text);
                            minute = parseFloat(minute) + parseFloat(item.duration.value / 60);

                            var orders = response.routes[0].waypoint_order;
                            var latlng =  "'"+response.routes[0].legs[index].end_location+"'";

                            var value1 = latlng.replace("(", '"(');
                            var value1 = value1.replace(")",')"');

                          //  alert(value1);
                            var coords = value1.match(/\((-?[0-9\.]+), (-?[0-9\.]+)\)/);

                            var lat = coords[1];
                            var long = coords[2];

                          // 	table.deleteRow(2);

                          
                           // alert(recids[orders[index]].location);

                            tbl = document.getElementById("tblResults");
                            var row = tbl.insertRow(1);

                            var cell = row.insertCell(0);
                            cell.innerText = recids[orders[index]].location
                             var cell = row.insertCell(1);
                             cell.innerText = index;
                            var cell = row.insertCell(2);
                            cell.innerText = source;
                            var cell = row.insertCell(3);
                            cell.innerText = waypoints[orders[index]].location
                            var cell = row.insertCell(4);
                            cell.innerText = item.end_address;
                            var cell = row.insertCell(5);
                            cell.innerText = distance;
                            var cell = row.insertCell(6);
                            cell.innerText = minute.toFixed(2) + " min";

                            var url = "/CITMain/UpdateRouteInfo";
                            var id = recids[orders[index]].location;
                            var fulladdress = item.end_address;
                            $.post(url, { ID: id, FullAddress: fulladdress, Duration: minute.toFixed(2), Distance: distance, SequenceNo: index+1, Latitude: lat, Longitude: long }, function (data) {
                                $("#msg").html(data);
                               // alert(fulladdress);
                            });
                        }
                    });
                    directionsDisplay.setDirections(response);
                }
                else {
                    //handle error
                }
            })
    }

        function GetRouteLocation() {

            directionsDisplay.setMap(map);
            source = "SRT-EON Security, Kelana Jaya";


            var waypoints = [];
            for (var i = 0; i < locations.length; i++) {
                var address = locations[i];
                var latitude1 = pushlatitude[i];
                var longitude1 = pushlongitude[i];

              //  alert(locations[i]);

                if (address !== "") {
                    waypoints.push({
                        location: address,
                      //  location: new google.maps.LatLng(latitude1, longitude1),
                        stopover: true
                    });
                }
            }
        

            var recid = [];
            for (var i = 0; i < locations.length; i++) {
                var id = recIDs[i];

                if (id !== "") {
                    recid.push({
                        location: id,
                        stopover: true
                    });
                }
            }

            //alert(waypoints[0].location);
            //alert(recid[0].location);

            var request = {
                origin: source,
                destination: waypoints[0].location,
                provideRouteAlternatives: false,
                waypoints: waypoints, //an array of waypoints
                optimizeWaypoints: true, //set to true if you want google to determine the shortest route or false to use the order specified.
                travelMode: google.maps.DirectionsTravelMode.DRIVING
            };

            alert(waypoints[0].location);

            var trafficLayer = new google.maps.TrafficLayer();
            trafficLayer.setMap(map);

          

            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                  //  var dvDistance = document.getElementById("dvDistance");
                    var distance = 0;
                    var minute = 0.00;
                    response.routes[0].legs.forEach(function (item, index) {
                        if (index < response.routes[0].legs.length - 1) {
                            distance = distance + parseInt(item.distance.text);
                            minute = parseFloat(minute) + parseFloat(item.duration.value / 60);

                            var orders = response.routes[0].waypoint_order;
                            var latlng =  "'"+response.routes[0].legs[index].end_location+"'";

                            var value1 = latlng.replace("(", '"(');
                            var value1 = value1.replace(")",')"');

                           // alert(value1);
                            var coords = value1.match(/\((-?[0-9\.]+), (-?[0-9\.]+)\)/);

                            var lat = coords[1];
                            var long = coords[2];

                            tbl = document.getElementById("tblResults");
                            var row = tbl.insertRow(1);

                            var cell = row.insertCell(0);
                            cell.innerText = recid[orders[index]].location
                              var cell = row.insertCell(1);
                            cell.innerText = index + 1;
                            var cell = row.insertCell(2);
                            // cell.innerText = source;
                            cell.innerText = response.routes[0].legs.lat;
                            var cell = row.insertCell(3);
                            cell.innerText = waypoints[orders[index]].location
                            var cell = row.insertCell(4);
                            cell.innerText = item.end_address;
                            var cell = row.insertCell(5);
                            cell.innerText = distance;
                            var cell = row.insertCell(6);
                            cell.innerText = minute.toFixed(2) + " min";

                            var url = "/CITMain/UpdateRouteInfo";
                            var id = recid[orders[index]].location;
                            var fulladdress = item.end_address;
                            $.post(url, { ID: id, FullAddress: fulladdress, Duration: minute.toFixed(2), Distance: distance, SequenceNo: index+1, Latitude: lat, Longitude: long }, function (data) {
                                $("#msg").html(data);
                               // alert(fulladdress);
                            });



                        }
                    });
                    directionsDisplay.setDirections(response);
                }
                else {
                    //handle error
                }
            })
            };

        function deleteRow(tableID) {
			try {
			var table = document.getElementById(tableID);
			var rowCount = table.rows.length;
                alert("delete record - " + table.rows);
			for(var i=0; i<rowCount; i++) {
				var row = table.rows[i];
				var chkbox = row.cells[0].childNodes[0];
				if(null != chkbox && true == chkbox.checked) {
					table.deleteRow(i);
					rowCount--;
					i--;
				}


			}
			}catch(e) {
				alert(e);
			}
            }



    </script>
}

