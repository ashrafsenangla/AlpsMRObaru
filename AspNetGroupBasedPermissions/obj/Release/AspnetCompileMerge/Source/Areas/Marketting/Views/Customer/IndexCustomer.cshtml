@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "Customer";}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content" style="height:30px; color:white; background-color:#368">
                    <section class="content-header">
                        <h4>
                            @ViewBag.title
                            <small style="color:white">: List of Customer</small>
                        </h4>
                    </section>
                </div>

                <div class="ibox-content dataTables_scroll dataTables_wrapper form-inline no-foote" style="min-height:40px; color:black; background-color:#368">
                    <div class="form-group">
                        <div class="col-md-9">
                            <select class="col-md-9 form-control input-sm" data-bind="options:availableBusinessUnit, value:selectedBusinessUnitName" style="font-size:12px"></select>
                        </div>
                    </div>

                    <div class="dataTables_filter dataTables_length dataTables_length pull-right">
                        <label>
                            <select class="form-control input-sm" style="width:80px;font-size:11px" data-bind="value:pageSize">
                                <option value="10">10/page</option>
                                <option value="25">25/page</option>
                                <option value="50">50/page</option>
                                <option value="100">100/page</option>
                            </select>
                        </label>
                        <label><input type="text" class="form-control input-sm" style="font-size:11px" data-bind="value: formVendorSearch, valueUpdate: 'keyup'" placeholder="Search">&nbsp;&nbsp;&nbsp;</label>
                        <div class="dataTables_filter dataTables_length dataTables_length pull-right">
                            @Html.ActionLink("Create", "Create", null, new { @class = "modal-link  pull-right btn btn-xs btn-primary btn-block", @style = "font-size:12px;padding-left:3px;padding-right:3px;padding-bottom:3px;padding-top:3px;width:79px;height:30px; " })
                        </div>
                    </div>
                </div>

                <div class="ibox-content">
                    <div class="dataTables_scroll dataTables_wrapper form-inline no-footer">
                        <table id="mainTable" class="table table-striped table-bordered table-hover dataTables-example">
                            <thead>
                                <tr>
                                    <td></td>
                                    <td></td>
                                    <td><select class="form-control input-sm" data-bind="options:availableGroupCode, value:selectedGroupCode" style="font-size:11px;width:110px;"></select></td>
                                    <td><select class="form-control input-sm" data-bind="options:availableState, value:selectedState" style="font-size:11px;width:140px;"></select></td>
                                    <td><select class="form-control input-sm" data-bind="options:availableCustomerStatus, value:selectedCustomerStatus" style="font-size:11px;width:110px;"></select></td>
                                    <td><select class="form-control input-sm" data-bind="options:availableServicesSegment, value:selectedServicesSegment" style="font-size:11px;width:110px;"></select></td>
                                    <td></td>
                                    <td></td>

                                </tr>
                                <tr style="background:black;color:white">
                                    <th>Customer Code</th>
                                    <th>Customer Name</th>
                                    <th>Customer Group</th>
                                    <th>State Name</th>
                                    <th>Status</th>
                                    <th>Services Segment</th>
                                    <th>Active?</th>
                                    <th><input name="select_all" type="hidden" disabled></th>
                                </tr>
                            </thead>
                            <tbody data-bind="dataTablesForEach:
                                   @Html.Partial("_IndexColumn8")
                                <tr>
                                    <td data-bind="text:CustomerCode, style : {width: '12%' } "></td>
                                    <td data-bind="text:CustomerName, style : {width: '30%' } "></td>
                                    <td data-bind="text:GroupCode, style : {width: '15%' } "></td>
                                    <td data-bind="text:State, style : {width: '15%' } "></td>
                                    <td data-bind="text:CustomerStatus, style : {width: '10%' } "></td>
                                    <td data-bind="text:ServicesSegment, style : {width: '13%' } "></td>
                                    <td data-bind="text:IsActive, style : {width: '10%' } "></td>

                                    <td data-bind="style : {width: '4%' } ">
                                        <a data-bind="visible:ShowButton==true,attr: { href: DetailURL}" title="Click To View" style="font-size:10px" class="btn-primary">View</a>
                                    </td>

                                </tr>
                            </tbody>
                        </table>
                        <div class="dataTables_info">
                            Showing <label data-bind="text: totalRow()==0 ? 0 : (indexPage()*pageSize())+1"></label> to <label data-bind="text: (indexPage()+1)*pageSize() > totalRow() ? totalRow():(indexPage()+1)*pageSize()"></label> of <label data-bind="text: totalRow"></label> entries
                        </div>
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination">
                                <li class="paginate_button previous" data-bind="click: prevPage, disable: indexPage()==0, css: { 'disabled': indexPage()==0}" tabindex="0"><a href="#">Previous</a></li>
                                <li class="paginate_button active" tabindex="0"><a href="#"><label data-bind="text: indexPage()+1"></label></a></li>
                                <li class="paginate_button next" data-bind="click: nextPage, disable: (indexPage()+1)==totalPage(), css: { 'disabled': (indexPage()+1)==totalPage()}" tabindex="0"><a href="#">Next</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Scripts/plugins/jquery-ui/jqueryuiStyles")
    <style>
        .ui-dialog-3000 {
            z-index: 3000 !important;
        }

        .ui-dialog-2900 {
            z-index: 2900 !important;
        }

        .disable-background-eee {
            background: #eee !important;
        }
        
        .dataTables_scroll {
            overflow: auto;
            position: relative;
        }
        .backgroundSelected {
            background-color: rgb(102, 204, 204) !important;
        }
       
        .label_p {
            display: inline-block;
            max-width: 100%;
            margin-bottom: 0px;
            font-weight: normal !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/notifyjs")

    <script type="text/javascript">


        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "customDate-pre": function (a) {
                var ukDatea = a.split('/');
                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },

            "customDate-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            "customDate-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });
        Date.prototype.toFormattedDate = function () {
            var dd = this.getDate();
            if (dd < 10) dd = '0' + dd;
            var mm = this.getMonth() + 1;
            if (mm < 10) mm = '0' + mm;
            var yyyy = this.getFullYear();
            /* change format here */
            return String(dd + "/" + mm + "/" + yyyy);
        };

        var MSR = function (data) {
            var self = this;
            this.CustomerCode = ko.observable(data.CustomerCode);
            this.BusinessUnitName = ko.observable(data.BusinessUnitName);
            this.CustomerName = ko.observable(data.CustomerName);
            this.GroupCode = ko.observable(data.GroupCode);
            this.State = ko.observable(data.State);
            this.CustomerStatus = ko.observable(data.CustomerStatus);
            this.ServicesSegment = ko.observable(data.ServicesSegment);
            this.IsActive = ko.observable(data.IsActive);
            this.DetailURL = ko.observable(data.DetailURL);
            this.ShowButton = ko.observable(data.ShowButton);
        };

        var ViewModel = new function () {
            var self = this;
            var defaultDropdownText = 'All';
            //var defaultDropdownTextStatus = 'Draft';
            //var defaultdate = new Date().toFormattedDate();
            self.pageSize = ko.observable(10);
            self.indexPage = ko.observable(0);
            self.totalPage = ko.observable(1);
            self.totalRow = ko.observable(0);
            self.hocs = ko.observableArray([]);
            self.formVendorSearch = ko.observable("");

            var defaultdate = new Date().toFormattedDate();
            self.availableBusinessUnit = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.BusinessUnitDesc){<text>'@item',</text>}]);
            self.availableCustomerStatus = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.StatusDesc){<text>'@item',</text>}]);
            self.availableGroupCode = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.GroupCode){<text>'@item',</text>}]);
            self.availableState = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.StateDesc){<text>'@item',</text>}]);
            self.availableServicesSegment = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.ServicesSegment){<text>'@item',</text>}]);

            self.selectedBusinessUnitName = ko.observable(defaultDropdownText);
            self.selectedCustomerStatus = ko.observable(defaultDropdownText);
            self.selectedGroupCode = ko.observable(defaultDropdownText);
            self.selectedState = ko.observable(defaultDropdownText);
            self.selectedServicesSegment = ko.observable(defaultDropdownText);

            self.nextPage = function () {
                if ((self.indexPage() + 1) < self.totalPage()) {
                    self.indexPage(self.indexPage() + 1);
                    self.loadhoc();
                }
            }
            self.prevPage = function () {
                if (self.indexPage() > 0) {
                    self.indexPage(self.indexPage() - 1);
                    self.loadhoc();
                }
            }

            self.loadhoc = function () {
                self.hocs.removeAll();

                //test here
               
                $.ajax('@Url.Action("GetCustomer", "Customer")', {
                    
                    data: ko.toJSON({
                        search: self.formVendorSearch,
                        pageSize: self.pageSize(),
                        pageIndex: self.indexPage(),
                        businessunitName: self.selectedBusinessUnitName(),
                        customerStatus: self.selectedCustomerStatus(),
                        groupcode: self.selectedGroupCode(),  
                        statename: self.selectedState(),
                        servicessegment: self.selectedServicesSegment(),

                    }),
                    type: "post",
                    contentType: "application/json",
                    success: function (result) {
                        self.hocs.removeAll();
                        var underlyingArray = self.hocs();
                        for (var i = 0; i < result.hocs.length; i++) {
                            var row = result.hocs[i];
                            var record = {
                                CustomerCode: row.CustomerCode,
                                CustomerName: row.CustomerName,
                                State: row.State,
                                GroupCode: row.GroupCode,
                                CustomerStatus: row.CustomerStatus,
                                ServicesSegment: row.ServicesSegment,
                                IsActive: row.IsActive,
                                DetailURL: row.DetailURL,
                                ShowButton: row.ShowButton,

                              
                            }
                            underlyingArray.push(record);
                        }
                        self.hocs.valueHasMutated();
                        self.totalPage(result.totalPage);
                        self.totalRow(result.totalRow);
                        $('#dialog-Loading').dialog("close");
                    },
                    error: function (error) {
                        $.notify(
                            error.responseText, {
                                position: "top center",
                                className: "error"
                            }
                        );
                        $('#dialog-Loading').dialog("close");
                    }
                });
            }

                self.restartSearchPagination = function () {
                self.hocs.removeAll();
                self.indexPage(0);
                self.totalPage(1);
                self.totalRow(0);
            }
            self.formVendorSearch.subscribe(function (value) {
                if (value == '') self.formVendorSearch("");
                self.restartSearchPagination();
                self.loadhoc();
            });
            self.pageSize.subscribe(function (value) {
                if (self.formVendorSearch() == '') self.formVendorSearch("");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.vendorsComputed = ko.computed(function () {
                var records = self.hocs;
                return records;
            });
           
              self.selectedBusinessUnitName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
              });

            self.selectedCustomerStatus.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.selectedGroupCode.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.selectedState.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.selectedServicesSegment.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
              });

             
            self.loadhoc();

    };

     $(document).ready(function () {

   

     });

    $('#mainTable tbody').on( 'click', 'tr td:nth-of-type(4)', function (){
    alert("-" );
    });

    $(".use-address").click(function() {
    var $row = $(this).closest("tr");    // Find the row
    var $text = $row.find(".nr").text(); // Find the text

    // Let's test it out
    alert($text);
     });

        $(document).ready(function () {

            $('#StartDate').datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
            }).datepicker("setDate", new Date());

            ko.applyBindings(ViewModel);
        });
    </script>
}

