@model Core.Entities.Data.Marketting.Customer
@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "Create New Customer";}

<div class="wrapper wrapper-content">
    <div class="row">
        @using (Html.BeginForm())
        {

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    @*<div class="ibox-title " style="padding-top:32px;"></div>*@
                    <div class="ibox-content"  style="background-color:#f7f5f5;">
                        <div class="row">
                            <div class="col-md-9">
                                <div class="form-group">
                                    <label style="font-weight:bolder;" class="pull-left btn btn-xs btn-primary btn-block">Customer Info</label>
                                </div>

                                <div class="welldetailsContactedit" style="min-height:400px; background-color:#c8faf0">
                                   

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerCode, "Customer Code", new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.EditorFor(model => model.CustomerCode,new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                            @Html.ValidationMessageFor(model => model.CustomerCode)
                                        </div>

                                        @Html.LabelFor(model => model.GroupCode, "Group Code", new { @class = "control-label col-md-1" })
                                    <div class="col-md-2 m-b-xxs">
                                        @Html.DropDownList("GroupCode", (IEnumerable<SelectListItem>)Session["GroupCode"], " < Select Group >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                        @Html.ValidationMessageFor(model => model.GroupCode)
                                    </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.StatusCode, "Status", new { @class = "control-label col-md-1" })
                                            <div class="col-md-2 m-b-xxs">
                                                 @Html.DropDownList("StatusCode", (IEnumerable<SelectListItem>)Session["StateCode"], " < Select Status >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                                @Html.ValidationMessageFor(model => model.StatusCode)
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerName, "Customer Name", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9 m-b-xxs">
                                            @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerNameRemarks, "Customer Name (Remarks)", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9 m-b-xxs">
                                            @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AddressLine1, "Address 1", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9 m-b-xxs">
                                            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.AddressLine1)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AddressLine2, "Address 2", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9 m-b-xxs">
                                            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.AddressLine2)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AddressLine3, "Address 3", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9 m-b-xxs">
                                            @Html.EditorFor(model => model.AddressLine3, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.AddressLine3)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PostCode, new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                            @Html.ValidationMessageFor(model => model.PostCode)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.City, new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.City)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.StateCode, "States", new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.DropDownList("StateCode", (IEnumerable<SelectListItem>)Session["StateCode"], " < Select State >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.StateCode)
                                        </div>
                                    </div>
                                    <br />
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CountryCode, "Country", new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.DropDownList("CountryCode", (IEnumerable<SelectListItem>)Session["CountryCode"], " < Select Country >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.CountryCode)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Phone1, "Phone #1", new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.EditorFor(model => model.Phone1, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.Phone1)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Phone2, "Phone #2", new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.Phone2)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.MobileNo, "Mobile No.", new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.MobileNo)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FaxNo, "Fax No.", new { @class = "control-label col-md-3" })
                                        <div class="col-md-3 m-b-xxs">
                                            @Html.EditorFor(model => model.FaxNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.FaxNo)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmailAddressCompany, "Email Address", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9 m-b-xxs">
                                            @Html.EditorFor(model => model.EmailAddressCompany, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.EmailAddressCompany)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.WebsiteURL, "Website URL", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9 m-b-xxs">
                                            @Html.EditorFor(model => model.WebsiteURL, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                            @Html.ValidationMessageFor(model => model.WebsiteURL)
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label style="font-weight:bolder;" class="pull-left btn btn-xs btn-primary btn-block">Business Details</label>
                                    </div>
                                    @Html.ValidationSummary("", new { @style = "color: red" })
                                <div class="welldetailsCompanyedit" style="min-height:210px; background-color:#c8faf0">


                                    @Html.LabelFor(model => model.BusinessUnit, "Business Unit", new { @class = "control-label col-md-12" })
                                    <div class="col-md-12 m-b-xxs">
                                        @Html.DropDownList("BusinessUnit", (IEnumerable<SelectListItem>)Session["BusinessUnit"], " < Select Business Unit >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                        @Html.HiddenFor(model => model.BusinessUnit)
                                        @Html.ValidationMessageFor(model => model.BusinessUnit)
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BizSector, "Business Sector", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.DropDownList("BizSector", (IEnumerable<SelectListItem>)Session["BizSector"], " < Select Sector >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.BizSector)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BizIndustry, "Business Industry", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">

                                            @Html.DropDownList("BizIndustry", (IEnumerable<SelectListItem>)Session["BizIndustry"], " < Select Industry >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.BizIndustry)
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ServicesSegment, "Services Segment", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @*@Html.DropDownList("BusinessType", (IEnumerable<SelectListItem>)Session["BusinessType"], " < Select Industry >", new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })*@
                                            @Html.DropDownList("ServicesSegment",
                                                new List<SelectListItem>
                                                {
                                                new SelectListItem{ Text="< Select Segment >", Value = "" },
                                                new SelectListItem{ Text="CIT", Value = "CIT" },
                                                new SelectListItem{ Text="SGS", Value = "SGS" },
                                                new SelectListItem{ Text="ATM", Value = "ATM" }
                                                 },
                                                new
                                                     {
                                                @style = "background-color: #edfcf9;font-size:12px;height:30px;",
                                                         @class = "form-control",
                                                         @disabled = "disabled",
                                                         @readonly = "readonly",
                                                         @required = "required"
                                                   }
                                                )
                                            @Html.ValidationMessageFor(model => model.ServicesSegment)
                                        </div>
                                    </div>
                                </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            <label style="font-weight:bolder;" class="pull-left btn btn-xs btn-primary btn-block">Contact Person Details</label>
                                        </div>
                                        @Html.ValidationSummary("", new { @style = "color: red" })
                                    <div class="welldetailsCompanyedit" style="min-height:210px; background-color:#c8faf0">
                                        

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ContactPerson, "Contact Person Name", new { @class = "control-label col-md-9" })
                                            <div class="col-md-12 m-b-xxs">
                                                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                                @Html.ValidationMessageFor(model => model.ContactPerson)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ContactPersonPosition, "Contact Person Position", new { @class = "control-label col-md-9" })
                                            <div class="col-md-12 m-b-xxs">
                                                @Html.DropDownList("ContactPersonPosition", (IEnumerable<SelectListItem>)Session["ContactPersonPosition"], " < Select Position >", new { @class = "form-control",  @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                                @Html.ValidationMessageFor(model => model.ContactPersonPosition)
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ContactPersonPhoneNo, "Contact Person Phone No.", new { @class = "control-label col-md-6" })
                                            @Html.LabelFor(model => model.ContactPersonMobile, "Contact Person Mobile", new { @class = "control-label col-md-6" })
                                            <div class="col-md-6 m-b-xxs">
                                                @Html.EditorFor(model => model.ContactPersonPhoneNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                                @Html.ValidationMessageFor(model => model.ContactPersonPhoneNo)
                                            </div>
                                            <div class="col-md-6 m-b-xxs">
                                                @Html.EditorFor(model => model.ContactPersonMobile, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                                @Html.ValidationMessageFor(model => model.ContactPersonMobile)
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ContactPersonEmail, "Contact Person Email", new { @class = "control-label col-md-12" })
                                            <div class="col-md-12 m-b-xxs">
                                                @Html.EditorFor(model => model.ContactPersonEmail, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })

                                                @Html.ValidationMessageFor(model => model.ContactPersonEmail)
                                            </div>
                                        </div>
                                    </div>
                                    </div>
                                </div>


                            <div class="col-md-3">
                                <label style="font-weight:bolder;" class="pull-left btn btn-xs btn-primary btn-block">Billing Info</label>
                                <div class="welldetailsShippingedit" style="min-height:650px; background-color:#c8faf0">
                                    <br />

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BillingCustomerCode, "Billing Company Code", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @*@Html.DropDownList("BillingCustomerCode", ViewData["BillingCompany"] as SelectList, "-- Select Parent Company --", htmlAttributes: new { @class = "form-control" })*@
                                            @Html.EditorFor(model => model.BillingCustomerCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                            @Html.ValidationMessageFor(model => model.BillingCustomerCode)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PaymentTerm, "Payment Term", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.DropDownList("PaymentTerm", (IEnumerable<SelectListItem>)Session["PaymentTerm"], " < Select Payment Term >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.PaymentTerm)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PaymentCurrency, "Payment Currency", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.DropDownList("PaymentCurrency", (IEnumerable<SelectListItem>)Session["PaymentCurrency"], " < Select Currency >", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.PaymentCurrency)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmailAddressBilling, "Email Address(Billing)", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.EditorFor(model => model.EmailAddressBilling, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                            @Html.ValidationMessageFor(model => model.EmailAddressBilling)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RemarksOnInvoice, "Remarks On Invoice", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @*@Html.TextAreaFor(model => model.RemarksOnInvoice, new { htmlAttributes = new {@class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })*@
                                            @Html.TextAreaFor(model => model.RemarksOnInvoice, new { @disabled = "disabled", row ="2" , @style="min-width:250px, background: red;font-size:12px;" ,@class = "form-control"})
                                            @Html.ValidationMessageFor(model => model.RemarksOnInvoice)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.InvoiceFormat, "Invoice Format", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.DropDownList("InvoiceFormat", (IEnumerable<SelectListItem>)Session["InvoiceFormat"], " < Select Format >", new { @class = "form-control",  @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.InvoiceFormat)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.InvoiceDestination, "Invoice Destination", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.DropDownList("InvoiceDestination", (IEnumerable<SelectListItem>)Session["InvoiceDestination"], " < Select Destination >", new { @class = "form-control",  @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.InvoiceDestination)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.InvoiceSendMode, "Invoice Send Mode", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.DropDownList("InvoiceSendMode", (IEnumerable<SelectListItem>)Session["InvoiceSendMode"], " < Select Mode >", new { @class = "form-control",  @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.InvoiceSendMode)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TaxRate, "Tax Rate", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.DropDownList("TaxRate", (IEnumerable<SelectListItem>)Session["TaxRate"], " < Select Tax Rate >", new { @class = "form-control",  @disabled = "disabled", @readonly = "readonly", @required = "required", @style = "background-color: #edfcf9;font-size:12px;height:30px;" })
                                            @Html.ValidationMessageFor(model => model.TaxRate)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CreditLimit, "Credit Limit", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.EditorFor(model => model.CreditLimit, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                            @Html.ValidationMessageFor(model => model.CreditLimit)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.OverDueLimit, "Overdue Limit", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.EditorFor(model => model.OverDueLimit, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                            @Html.ValidationMessageFor(model => model.OverDueLimit)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyRegistrationNo, "Company Registration No.", new { @class = "control-label col-md-12" })
                                        <div class="col-md-12 m-b-xxs">
                                            @Html.EditorFor(model => model.CompanyRegistrationNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @disabled = "disabled", @style = "background-color: #edfcf9;font-size:12px;height:30px;" } })
                                            @Html.ValidationMessageFor(model => model.CompanyRegistrationNo)
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-5 col-md-9" style="min-height:100px;">
                                @Html.ActionLink("Back To List", "IndexCustomer", null, new { @class = "btn btn-white" }, new { @class = "btn btn-xs btn-primary", @style = "border-color:steelblue;background-color:steelblue; color: white;" })
                                @Html.EncodedActionLink("Edit", "EditCustomer", "Customer", new { id = Model.ID, area = "Marketting" }, new { @class = "btn btn-xs btn-primary", @style = "border-color:#37a5ed;background-color:#37a5ed;width:40px; " })
                                @Html.EncodedActionLink("Delete", "DeleteCustomer", "Customer", new { id = Model.ID, area = "Marketting" }, new { @class = "btn btn-xs btn-primary", @style = "width:60px;" })


                              
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }
    </div>
</div>

@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/wizardStepsStyles")
    <style>
        .field-validation-error {
            color: red;
        }



        hr {
            border: none;
            border-top: 3px double #368;
            color: #368;
            overflow: visible;
            text-align: Left;
            height: 5px;
        }

            hr:after {
                /*background: #fff;*/
                content: '';
                padding: 0 4px;
                position: relative;
                top: -13px;
            }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/iCheck")

    @Scripts.Render("~/plugins/wizardSteps")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/knockout")
    <script type="text/javascript">

        validateEmail($("#Validatetextbox").val());
        @*function validateEmail(emailField) {
            var reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
            if (reg.test(emailField) == false) {
                alert('Invalid Email Address');
                return false;
            }
            return true;
        }*@


        //var testviewModel = new testviewModel();
        //function testviewModel() {
        //    var self = this;
        //    self.CurrentAsset = ko.observable(0);
        //    self.FixedAsset = ko.observable(0);
        //    self.CurrentLiabilities = ko.observable(0);
        //    self.FixedLiabilities = ko.observable(0);
        //    self.CurrentNetWorth = ko.computed(function () {
        //        return parseFloat(parseFloat(self.CurrentAsset()) - parseFloat(self.CurrentLiabilities())).toFixed(2);
        //    });
        //    self.FixedNetWorth = ko.computed(function () {
        //        return parseFloat(parseFloat(self.FixedAsset()) - parseFloat(self.FixedLiabilities())).toFixed(2);
        //    });
        //    self.TotalAsset = ko.computed(function () {
        //        return parseFloat(parseFloat(self.CurrentAsset()) + +parseFloat(self.FixedAsset())).toFixed(2);
        //    });
        //    self.TotalLiabilities = ko.computed(function () {
        //        return parseFloat(parseFloat(self.FixedLiabilities()) + +parseFloat(self.CurrentLiabilities())).toFixed(2);
        //    });
        //    self.Total = ko.computed(function () {
        //        return parseFloat(parseFloat(self.TotalAsset()) - parseFloat(self.TotalLiabilities())).toFixed(2);
        //    });
        //}
        $(document).ready(function () {


            $("#wizard").steps();
            $("#form").steps({
                bodyTag: "fieldset",
                onStepChanging: function (event, currentIndex, newIndex) {
                    // Always allow going backward even if the current step contains invalid fields!
                    if (currentIndex > newIndex) {
                        return true;
                    }

                    var form = $(this);

                    // Clean up if user went backward before
                    if (currentIndex < newIndex) {
                        // To remove error styles
                        $(".body:eq(" + newIndex + ") label.error", form).remove();
                        $(".body:eq(" + newIndex + ") .error", form).removeClass("error");
                    }

                    // Disable validation on fields that are disabled or hidden.
                    form.validate().settings.ignore = ":disabled,:hidden";

                    // Start validation; Prevent going forward if false
                    return form.valid();
                },
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });
        });



    </script>

    @Scripts.Render("~/plugins/dataPicker")


    <script type="text/javascript">
        $(document).ready(function () {

            $('#data_1 .input-group.date').datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
            $('.scroll_content').slimscroll({
                height: '250px'
            })
            $('.full-height-scroll').slimscroll({
                height: '100%'
            })
            ko.applyBindings(testviewModel);
        });

            //function CopyAdd() {

            //    var cb1 = document.getElementById('sameadd');
            //    var address = document.getElementById('VendorMaster_Address');
            //    var regaddress = document.getElementById('VendorMaster_RegAddress');
            //    var postcode = document.getElementById('VendorMaster_Postcode');
            //    var regpostcode = document.getElementById('VendorMaster_RegPostcode');
            //    var city = document.getElementById('VendorMaster_City');
            //    var regcity = document.getElementById('VendorMaster_RegCity');
            //    var statecode = document.getElementById('VendorMaster_StateCode');
            //    var regstatecode = document.getElementById('VendorMaster_RegStateCode');
            //    var countrycode = document.getElementById('VendorMaster_CountryCode');
            //    var regcountrycode = document.getElementById('VendorMaster_RegisterCountryCode');

            //    if (cb1.checked) {
            //        regaddress.value = address.value;
            //        regpostcode.value = postcode.value;
            //        regcity.value = city.value;
            //        regstatecode.value = statecode.value;
            //        regcountrycode.value = countrycode.value;


            //    } else {
            //        regaddress.value = '';
            //        regpostcode.value = '';
            //        regcity.value = '';
            //        regstatecode.value = '';
            //        regcountrycode.value = '';

            //    }
            //}


    </script>
}