@model IEnumerable<AspNetGroupBasedPermissions.Areas.MISC.Models.WeaponMvmtViewModel>
@using AspNetGroupBasedPermissions.Helpers
@{
    ViewBag.Title = "Create Weapon Movement";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Create Weapon Movement</h5>
                </div>
                <div class="ibox-content">
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label col-md-4">Movement Date</label>
                            <div class="col-md-7">
                                <div class="input-group date">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <input class="form-control" id="StartDate" data-bind="event:{ change: Search} ">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label col-md-3">Business Unit</label>
                            <div class="col-md-7">
                                @Html.DropDownList("BusinessUnit", (IEnumerable<SelectListItem>)Session["BusinessUnit"], new { @class = "form-control m-b-xs", @required = "true" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <button id="PobSumarryAdded" onclick="Validation();" class="btn btn-primary btn-xs" style="margin-left:5px; margin-right:5px">Add POB Daily Summary</button>
                        </div>
                    </div>
                    <br />
                    <div class="ibox-tools">
                        <div class="ibox-tools">
                            <button id="custom_datatables_submit_button" onclick="submitAll();" class="btn btn-primary btn-xs" style="display:none;margin-left:5px; margin-right:5px">Submit</button>
                        </div>
                    </div>
                    <table id="mainTable" class="table table-striped table-bordered table-hover dataTables-example" width="100%">
                        <thead>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr>
                                <th>
                                    <input name="select_all" value="1" type="checkbox">
                                </th>
                                <th>@Html.DisplayName("ID")</th>
                                <th>
                                    @Html.DisplayName("POB Code")
                                </th>
                                <th>
                                    @Html.DisplayName("POB Name")
                                </th>
                                <th>
                                    @Html.DisplayName("Effective Date")
                                </th>
                                <th>
                                    @Html.DisplayName("Room")
                                </th>
                                <th>
                                    @Html.DisplayName("Primary Life Boat")
                                </th>
                                <th>
                                    @Html.DisplayName("Secondary Life Boat ")
                                </th>
                                <th>
                                    @Html.DisplayName("Shift")
                                </th>
                                <th>
                                    @Html.DisplayName("Muster")
                                </th>
                                <th>
                                    @Html.DisplayName("Priority")
                                </th>
                                <th>
                                    @Html.DisplayName("Schedule")
                                </th>
                                <th>
                                    @Html.DisplayName("Remarks")
                                </th>
                                <th>
                                    @Html.DisplayName("Status")
                                </th>
                                @*<th></th>*@
                            </tr>
                        </thead>
                        <tbody data-bind="dataTablesForEach:
                               {
                               data: listHSEs(), dataTableOptions: {
                               paging: false,
                               dom: 'T<\' clear\'>
                            lfrtip',
                            tableTools: {
                            'sSwfPath': '../../../scripts/plugins/dataTables/swf/copy_csv_xls_pdf.swf'
                            },
                            aoColumns: [
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null,
                            null
                            ],
                            responsive:true,
                            columnDefs: [
                            {
                            'targets': 13,
                            'searchable': false,
                            'orderable': false
                            }
                            ],
                            rowCallback: function (row, data, dataIndex) {
                            var rowId = data[1];
                            if ($.inArray(rowId, custom_datatables_rows_selected) !== -1) {
                            $(row).find('input[type=\'checkbox\']').prop('checked', true);
                            $(row).addClass('selected');
                            }
                            }
                            }
                            }">
                            <tr>
                                <td width="1%">
                                    <input type='checkbox'>
                                </td>
                                <td data-bind="text:ID, style : {width: '2%'}"></td>
                                <td data-bind="text:WeaponID, style : {width: '5%'} "></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>

                            </tr>
                        </tbody>
                    </table>
                    <div class="form-group">
                        <div style="text-align:center">
                            <button class="btn btn-primary" data-bind="click: savePOBSummary" onclick="return false;">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Scripts/plugins/jquery-ui/jqueryuiStyles")
    @Styles.Render("~/plugins/dataPickerStyles")

    <style>
        .ui-dialog-3000 {
            z-index: 3000 !important;
        }

        .ui-dialog-2900 {
            z-index: 2900 !important;
        }

        .disable-background-eee {
            background: #eee !important;
        }

        .modal {
            margin: auto;
            padding-top: 100px;
            min-height: 500px;
            width: 1200px;
        }

        .numberCircle {
            border-radius: 50%;
            behavior: url(PIE.htc); /* remove if you don't care about IE8 */
            width: 20px;
            height: 20px;
            padding: 0px;
            background: #1AB394;
            border: 1px solid #1AB394;
            text-align: center;
            color: white;
            font: 10px;
        }

        .datepicker {
            z-index: 3000 !important; /*Date Picker in knockout*/
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    $(document).ready(function () {
        $("#StartDate").datepicker({
            todayBtn: "linked",
            format: "dd/mm/yyyy",
            keyboardNavigation: false,
            forceParse: false,
            autoclose: true
        }).datepicker("setDate", new Date());

        ko.applyBindings(ViewModel);
        ViewModel.loadHSEs();
    });
    function GetPOBSummary() {
        $('#dialog-Loading').dialog("open");
        $.ajax({
            type: "POST",
            url: "@Url.Action("CreatePOBSummary", "POBSummary")",
            data: { dateHSESummary: $("#StartDate").val(), businessunit: $("#BusinessUnit").val() },
            success: function (data) {
                $('#dialog-Loading').dialog("close");
                alert(data);
                ViewModel.Search();
            },
            dataType: "json",
            traditional: true
        });
    }

      function submitAll() {
          $('#dialog-Loading').dialog("open");
        $.ajax({
            type: "POST",
            url: "@Url.Action("SubmitAllPOBSummary", "POBSummary")",
            data: { Id: custom_datatables_rows_selected },
            success: function (data) {
                $('#dialog-Loading').dialog("close");
                alert(data);
                businessunit.reload();
            },
            dataType: "json",
            traditional: true
        });
    }

    function Validation() {
        var startdate = document.getElementById("StartDate").value;
        var businessunit = document.getElementById("BusinessUnit").value;
        if (startdate == "") {
            document.getElementById('StartDate').style.borderColor = "red";
            return false;
        }
        else {
            document.getElementById('StartDate').style.borderColor = "green";
            if (businessunit == "") {
                document.getElementById('BusinessUnit').style.borderColor = "red";
                return false;
            }
            else {
                GetPOBSummary()
                document.getElementById('BusinessUnit').style.borderColor = "green";
            }
        }
    }

    jQuery.extend(jQuery.fn.dataTableExt.oSort, {
        "customDate-pre": function (a) {
            var ukDatea = a.split('/');
            return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
        },
        "customDate-asc": function (a, b) {
            return ((a < b) ? -1 : ((a > b) ? 1 : 0));
        },
        "customDate-desc": function (a, b) {
            return ((a < b) ? 1 : ((a > b) ? -1 : 0));
        }
    });

    Date.isLeapYear = function (year) {
        return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));
    };
    Date.getDaysInMonth = function (year, month) {
        return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
    };

    Date.prototype.isLeapYear = function () {
        return Date.isLeapYear(this.getFullYear());
    };

    Date.prototype.getDaysInMonth = function () {
        return Date.getDaysInMonth(this.getFullYear(), this.getMonth());
    };

    Date.prototype.addMonths = function (value) {
        var n = this.getDate();
        this.setDate(1);
        this.setMonth(this.getMonth() + value);
        this.setDate(Math.min(n, this.getDaysInMonth()));
        return this;
    };

    // Person ViewModel
    var MSR = function (data) {
        var self = this;
        this.ID = ko.observable(data.ID);
        this.HSEDate = ko.observable(data.HSEDate);
        this.BusinessUnit = ko.observable(data.BusinessUnit);
        this.POBCode = ko.observable(data.POBCode);
        this.RoomNumber = ko.observable(data.RoomNumber);
        this.Shift = ko.observable(data.Shift);
        this.LifeBoat = ko.observable(data.LifeBoat);
        this.LifeBoat2 = ko.observable(data.LifeBoat2);
        this.ShiftType = ko.observable(data.ShiftType);
        this.POBHSERemarks = ko.observable(data.POBHSERemarks);
        this.POBName = ko.observable(data.POBName);
        this.EffectiveDate = ko.observable(data.EffectiveDate);
        this.Status = ko.observable(data.Status);
        this.Priority = ko.observable(data.Priority);
        this.Muster = ko.observable(data.Muster);
        this.CompanyCode = ko.observable(data.CompanyCode);
        this.PositionID = ko.observable(data.PositionID);
    };

    var ViewModel = new function () {
        var self = this;
        var defaultDropdownText = 'All';

        self.test = ko.observableArray([]);
        $("#testtry").dataTable().fnDestroy();
        $("#mainTable").dataTable().fnDestroy();
        self.HSEs = ko.observableArray([]);
        self.loadHSEs = function () {
            $('#dialog-Loading').dialog("open");
            $.ajax({
                type: "POST",
                url: '@Url.Action("ListPOBSummary", "POBSummary")',
                data: {
                    startdate: $("#StartDate").val(),
                    businessunit: $("#BusinessUnit").val()
                },
                dataType: 'json',
                success: function (data) {
                    $("#mainTable").dataTable().fnDestroy();
                    $('#dialog-Loading').dialog("close");
                    self.HSEs($.map(data, function (user) {
                        var msr = new MSR({
                            ID: user.ID,
                            HSEDate: user.HSEDate,
                            EffectiveDate: user.EffectiveDate,
                            BusinessUnit: user.BusinessUnit,
                            POBCode: user.POBCode,
                            POBName: user.POBName,
                            POBHSERemarks: user.POBHSERemarks,
                            Shift: user.Shift,
                            ShiftType: user.ShiftType,
                            RoomNumber: user.RoomNumber,
                            Status: user.Status,
                            LifeBoat: user.LifeBoat,
                            LifeBoat2: user.LifeBoat2,
                            Muster: user.Muster,
                            Priority: user.Priority,
                            CompanyCode: user.CompanyCode,
                            PositionID: user.PositionID
                        })

                        return msr;
                    }));
                },
                error: function (error) {
                    alert(error);
                }
            })
        };


        self.columnNames = ko.computed(function () {
            if (self.test().length === 0)
                return [];
            var props = [];
            var obj = self.test()[0];
            for (var name in obj)
                props.push(name);
            return props;
        });
        self.availableStatus = ko.observableArray([defaultDropdownText, 'Draft', 'Submit']);
        self.availableShift= ko.observableArray(['','All','Day', 'Night'])
        self.availablePriority = ko.observableArray(['', 'I', 'II', 'III','IV'])
        self.selectedStatus = ko.observable(defaultDropdownText);
        self.listHSEs = ko.computed(function () {

            $("#mainTable").dataTable().fnDestroy();
            var desiredStatus = self.selectedStatus();
            var records = self.HSEs;
            records = desiredStatus == defaultDropdownText ? records : ko.observableArray(ko.utils.arrayFilter(records(), function (msr) {
                return msr.Status() == desiredStatus;
            }));

            return records;
        });

        self.Search = function () {
            self.loadHSEs();
        }
        $("#BusinessUnit").change(function () {
            self.loadHSEs();
        });

        self.savePOBSummary = function (item) {
                $('#dialog-Loading').dialog("open");
                $.ajax("@Url.Action("POBSummarySave", "POBSummary", new { area = "QHSE" })", {
                data: ko.toJSON({ businessunit: $("#BusinessUnit").val(), hsedate: $("#StartDate").val(), model: self.HSEs }),
                type: "post", contentType: "application/json",
                success: function (result) {
                    alert(result);
                    $('#dialog-Loading').dialog("close");
                },
                error: function (error) {
                    alert(error);
                }
            });
        };

        self.removePOBSummary = function (item) {

            if (confirm('Are you sure want to delete this?')) {
                $('#dialog-Loading').dialog("open");
                $.ajax("@Url.Action("POBSummaryDelete", "POBSummary", new { area = "QHSE" })", {
                    data: ko.toJSON({ ID: item.ID }),
                    type: "post", contentType: "application/json",
                    success: function (result) {
                        self.Search();
                        $('#dialog-Loading').dialog("close");
                    },
                    error: function (error) {
                        alert(error);
                    }
                });
            };

        }

    }

    </script>
}
