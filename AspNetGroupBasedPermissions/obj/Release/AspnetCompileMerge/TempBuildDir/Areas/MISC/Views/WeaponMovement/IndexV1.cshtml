@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "Weapon";}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content" style="height:30px; color:white; background-color:#368">
                    <section class="content-header">
                        <h4>
                            @ViewBag.title
                            <small style="color:white">: list of weapon movement</small>
                        </h4>
                    </section>
                </div>
                <div class="ibox-content dataTables_scroll dataTables_wrapper form-inline no-foote" style="min-height:40px; color:black; background-color:#368">
                    <div class="form-group">
                        <div class="col-md-9">
                            <div class="input-group date">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                <input class="form-control" style="max-height:30px;max-width:130px;font-size:12px;" id="StartDate" data-bind="value:selectedTransactionDate">
                            </div>
                        </div>
                    </div>
                    <div class="dataTables_filter dataTables_length dataTables_length pull-right">
                        <label>
                            <select class="form-control input-sm" style="width:80px;font-size:11px" data-bind="value:pageSize">
                                <option value="10">10/page</option>
                                <option value="25">25/page</option>
                                <option value="50">50/page</option>
                                <option value="100">100/page</option>
                            </select>
                        </label>
                        <button id="createweaponDaily" onclick="Validation();" class="pull-left btn btn-primary btn-xs" style="margin-left:5px; margin-right:5px">Create Daily Weapon</button>
                        <label><input type="text" class="form-control input-sm" style="font-size:11px" data-bind="value: formVendorSearch, valueUpdate: 'keyup'" placeholder="Search">&nbsp;&nbsp;&nbsp;</label>
                        <select class="col-md-9 form-control input-sm" data-bind="options:availableBusinessUnit, value:selectedBusinessUnitName" style="font-size:12px"></select>&nbsp;
                        @Html.DropDownList("Branch", (IEnumerable<SelectListItem>)Session["Branch"], new { @class = "form-control input-sm  ", @style = "font-size:12px;height:30px", @required = "true" })

                    </div>
                </div>
                <div class="ibox-content">
                    <div class="dataTables_scroll dataTables_wrapper form-inline no-footer">
                        <table id="mainTable" class="table table-striped table-bordered table-hover dataTables-example">
                            <thead>
                                <tr>
                                    <td></td>
                                    <td data-bind="style : {width: '8%' } ">
                                        <select class="form-control input-xs" data-bind="options:availableSignInSignOut, value:selectedSignInSignOut" style="font-size:11px; height:30px"></select>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td data-bind="style : {width: '8%' } ">
                                        <select class="form-control input-xs" data-bind="options:availableStatusMvmt, value:selectedStatusMvmt" style="font-size:11px; height:30px"></select>
                                    </td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Serial No</th>
                                    <th>Sign In/Out</th>
                                    <th>Last Sign In/Out</th>
                                    <th>Name</th>
                                    <th>Status</th>
                                    <th>Active?</th>
                                    <th><input name="select_all" type="hidden" disabled></th>
                                </tr>
                            </thead>
                            <tbody data-bind="dataTablesForEach:
                                   @Html.Partial("_IndexColumn7")
                                <tr>
                                    <td data-bind="text:SerialNo, style : {width: '10%' } "></td>
                                    @*<td data-bind="text:TransactionDate, style : {width: '8%' } "></td>*@
                                    <td data-bind="text:SignInSignOut, style : {width: '8%' } "></td>
                                    <td data-bind="text:LastSignInSignOutDate, style : {width: '8%' } "></td>
                                    <td data-bind="text:StaffName, style : {width: '8%' } "></td>
                                    <td data-bind="text:Status, style : {width: '8%' } "></td>
                                    <td data-bind="text:IsActive, style : {width: '8%' } "></td>
                                    <td data-bind="style : {width: '4%' } ">
                                        <a data-bind="visible:ShowButton==true,attr: { href: DetailURL}" title="Click To View" style="font-size:10px" class="btn-primary">Movement</a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="dataTables_info">
                            Showing <label data-bind="text: totalRow()==0 ? 0 : (indexPage()*pageSize())+1"></label> to <label data-bind="text: (indexPage()+1)*pageSize() > totalRow() ? totalRow():(indexPage()+1)*pageSize()"></label> of <label data-bind="text: totalRow"></label> entries
                        </div>
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination">
                                <li class="paginate_button previous" data-bind="click: prevPage, disable: indexPage()==0, css: { 'disabled': indexPage()==0}" tabindex="0"><a href="#">Previous</a></li>
                                <li class="paginate_button active" tabindex="0"><a href="#"><label data-bind="text: indexPage()+1"></label></a></li>
                                <li class="paginate_button next" data-bind="click: nextPage, disable: (indexPage()+1)==totalPage(), css: { 'disabled': (indexPage()+1)==totalPage()}" tabindex="0"><a href="#">Next</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Scripts/plugins/jquery-ui/jqueryuiStyles")
    @Styles.Render("~/plugins/dataPickerStyles")

    <style>
        .ui-dialog-3000 {
            z-index: 3000 !important;
        }

        .ui-dialog-2900 {
            z-index: 2900 !important;
        }

        .disable-background-eee {
            background: #eee !important;
        }

        .modal {
            margin: auto;
            padding-top: 100px;
            min-height: 500px;
            width: 1200px;
        }

        .wizard > .content {
            min-height: 450px !important;
        }

        .ui-dialog-title {
            text-transform: none !important;
        }
          .dataTables_scroll {
            overflow: auto;
            position: relative;
        }
        .ui-widget {
            font-family: 'open sans', 'Helvetica Neue', 'Helvetica', Arial, sans-serif !important;
        }

        .no-titlebar .ui-dialog-titlebar {
            display: none;
        }

        .no-titlebar-round .ui-dialog-titlebar {
            display: none;
        }

        .no-titlebar-round {
            border-radius: 5px !important;
        }

        .font-danger {
            color: #ed5565 !important;
            font-weight: bold;
        }

        #header-fixed {
            position: fixed;
            top: 0px;
            display: none;
            background-color: white;
        }

        .numberCircle {
            border-radius: 50%;
            behavior: url(PIE.htc); /* remove if you don't care about IE8 */
            width: 20px;
            height: 20px;
            padding: 0px;
            background: #1AB394;
            border: 1px solid #1AB394;
            text-align: center;
            color: white;
            font: 10px;
        }

        .datepicker {
            z-index: 3000 !important; /*Date Picker in knockout*/
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/notifyjs")

    <script type="text/javascript">

         $(document).ready(function () {

            $('#StartDate').datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
            }).datepicker("setDate", new Date());

            ko.applyBindings(ViewModel);
            ViewModel.loadhoc();

        });

    function GetWeaponMvmt() {

            $('#dialog-Loading').dialog("open");
            $.ajax({
                type: "POST",
                url: "@Url.Action("CreateWeaponMvmtSummary", "WeaponMovement")",
                data: { dateMovement: $("#StartDate").val(), branch: $("#Branch").val() },
                success: function (data) {
                    $('#dialog-Loading').dialog("close");
                    alert(data);
                     $('#StartDate').val('18/10/2019');
                     location.reload();
                   // ViewModel.Search();
                },
                dataType: "json",
                traditional: true
            });
    }

    function Validation() {

        var startdate = document.getElementById("StartDate").value;
        var location = document.getElementById("Branch").value;

        if (startdate == "") {
            //alert("Testing 1");
            document.getElementById('StartDate').style.borderColor = "red";
            return false;
        }
        else {

            document.getElementById('StartDate').style.borderColor = "green";
            if (location == "") {
                //alert("Testing 2");
                document.getElementById('Branch').style.borderColor = "red";
                return false;
            }
            else {
                //alert("Testing 3");
                GetWeaponMvmt();
            }
        }
    }


     function submitAll2()
    {
        data: { hazardIds: custom_datatables_rows_selected };
        var url = '';
        alert(custom_datatables_rows_selected);
        alert(custom_datatables_rows_selected.length);
        var id = $(this).attr("ID");
        if (custom_datatables_rows_selected.length = 1)
        {

            $("#dialog").dialog(
                {
                autoOpen: true,
                title: 'Edit Record',
                position: { my: "right top", at: "right bottom", of: window },
                modal: true,
                height: 440,
                width: 1030,
                url: url,
                    open: function (recID)
                    {
                        recID = custom_datatables_rows_selected;
                        recID = "H20190607-N2-10004";
                    link = "@Url.Action( "_EditHazard", "Customer",new { HazardID = "recID"})";
                    link = link.replace("recID", recID);
                    $(this).load(link);
                    },
                    close: function (event, ui)
                    {

                    location.reload();
                    $(this).dialog('close');
                    },
        });
        }
    }


    function submitAll()
    {
        data: { VehicleNo: custom_datatables_rows_selected };
        var url = '';
        alert(custom_datatables_rows_selected);
        var id = $(this).attr("ID");
        if (custom_datatables_rows_selected.length = 1)
        {
            $("#dialog").dialog(
                {

                url: url,
                    open: function (recID)
                    {
                     // recID = custom_datatables_rows_selected;
                     recID = "H20190607-N2-10004";
                     link = "@Url.Action( "_EditHazard", "Customer",new { HazardID = "recID"})";
                    link = link.replace("recID", recID);
                    $(this).load(link);
                    },

        });
        }
    }


        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "customDate-pre": function (a) {
                var ukDatea = a.split('/');
                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },

            "customDate-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            "customDate-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });
        Date.prototype.toFormattedDate = function () {
            var dd = this.getDate();
            if (dd < 10) dd = '0' + dd;
            var mm = this.getMonth() + 1;
            if (mm < 10) mm = '0' + mm;
            var yyyy = this.getFullYear();
            /* change format here */
            return String(dd + "/" + mm + "/" + yyyy);
        };

        var MSR = function (data) {
            var self = this;
            this.SerialNo = ko.observable(data.SerialNo);
            this.BranchName = ko.observable(data.BranchName);
            this.BusinessUnitName = ko.observable(data.BusinessUnitName);
            this.StaffNo = ko.observable(data.StaffNo);
            this.StaffName = ko.observable(data.StaffName);
            this.TransactionDate = ko.observable(data.TransactionDate);
            this.Status = ko.observable(data.Status);
            this.SignInSignOut = ko.observable(data.SignInSignOut);
            this.Remarks = ko.observable(data.Remarks);
            this.LastSignInSignOutDate = ko.observable(data.LastSignInSignOutDate)
            this.IsActive = ko.observable(data.IsActive);
            this.DetailURL = ko.observable(data.DetailURL);
            this.ShowButton = ko.observable(data.ShowButton);
        };

        var ViewModel = new function () {
            var self = this;
            var defaultDropdownText = 'All';
          //  var defaultDropdownTextStatus = 'Draft';
         //   var defaultdate = new Date().toFormattedDate();
            self.pageSize = ko.observable(100);
            self.indexPage = ko.observable(0);
            self.totalPage = ko.observable(1);
            self.totalRow = ko.observable(0);
            self.hocs = ko.observableArray([]);
            self.formVendorSearch = ko.observable("");

            var defaultdate = new Date().toFormattedDate();
           self.availableBranch = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.BranchDesc){<text>'@item',</text>}]);
           self.availableBusinessUnit = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.BusinessUnitDesc){<text>'@item',</text>}]);
           self.availableSignInSignOut = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.SignInSignOut){<text>'@item',</text>}]);
           self.availableStatusMvmt = ko.observableArray([defaultDropdownText,@foreach (var item in ViewBag.StatusMvmt){<text>'@item',</text>}]);

            self.selectedBranchName = ko.observable(defaultDropdownText);
            self.selectedBusinessUnitName = ko.observable(defaultDropdownText);
            self.selectedTransactionDate = ko.observable(defaultdate);
            self.selectedStatusMvmt = ko.observable(defaultDropdownText);
            self.selectedSignInSignOut = ko.observable(defaultDropdownText);

            self.nextPage = function () {
                if ((self.indexPage() + 1) < self.totalPage()) {
                    self.indexPage(self.indexPage() + 1);
                    self.loadhoc();
                }
            }
            self.prevPage = function () {
                if (self.indexPage() > 0) {
                    self.indexPage(self.indexPage() - 1);
                    self.loadhoc();
                }
            }

            self.loadhoc = function () {
                self.hocs.removeAll();

                $.ajax('@Url.Action("GetWeaponMvmt", "WeaponMovement")', {
                    data: ko.toJSON({
                        search: self.formVendorSearch(),
                        pageSize: self.pageSize(),
                        pageIndex: self.indexPage(),
                        businessunitname: self.selectedBusinessUnitName(),
                        branchname: self.selectedBranchName(),
                        transactiondate: self.selectedTransactionDate(),
                        statusmvmt: self.selectedStatusMvmt(),
                        signinsignout: self.selectedSignInSignOut(),

                    }),
                    type: "post",
                    contentType: "application/json",
                    success: function (result) {
                        self.hocs.removeAll();
                        var underlyingArray = self.hocs();
                        for (var i = 0; i < result.hocs.length; i++) {
                            var row = result.hocs[i];
                            var record = {
                                SerialNo: row.SerialNo,
                                BranchName: row.BranchName,
                                BusinessUnitName: row.BusinessUnitName,
                                StaffNo: row.StaffNo,
                                StaffName: row.StaffName,
                                TransactionDate: row.TransactionDate,
                                LastSignInSignOutDate: row.LastSignInSignOutDate,
                                Status: row.Status,
                                SignInSignOut: row.SignInSignOut,
                                IsActive: row.IsActive,
                                Remarks: row.Remarks,
                                DetailURL: row.DetailURL,
                                ShowButton: row.ShowButton,
                            }
                            underlyingArray.push(record);
                        }
                        self.hocs.valueHasMutated();
                        self.totalPage(result.totalPage);
                        self.totalRow(result.totalRow);
                        $('#dialog-Loading').dialog("close");

                    },
                    error: function (error) {
                        $.notify(
                            error.responseText, {
                                position: "top center",
                                className: "error"
                            }
                        );
                        $('#dialog-Loading').dialog("close");
                    }
                });
            }

                self.restartSearchPagination = function () {
                self.hocs.removeAll();
                self.indexPage(0);
                self.totalPage(1);
                self.totalRow(0);
            }
            self.formVendorSearch.subscribe(function (value) {
                if (value == '') self.formVendorSearch("");

                self.restartSearchPagination();
                self.loadhoc();
            });
            self.pageSize.subscribe(function (value) {
                if (self.formVendorSearch() == '') self.formVendorSearch("");
                self.restartSearchPagination();
                self.loadhoc();
            });

            self.vendorsComputed = ko.computed(function () {
                var records = self.hocs;
                return records;
            });
            self.selectedBranchName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
            });
              self.selectedBusinessUnitName.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
              });
             self.selectedStatusMvmt.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
             });
             self.selectedSignInSignOut.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
              });
             self.selectedTransactionDate.subscribe(function (value) {
                $('#dialog-Loading').dialog("open");
                self.restartSearchPagination();
                self.loadhoc();
                });
            self.loadhoc();

    };

    $('#mainTable tbody').on( 'click', 'tr td:nth-of-type(3)', function (){
     alert("Please scan Staff ID" );
    });
     $('#mainTable tbody').on( 'click', 'tr td:nth-of-type(4)', function (){
      alert("Please scan Weapon" );
     });
     $('#mainTable tbody').on( 'click', 'tr td:nth-of-type(5)', function (){
     alert("Please scan Weapon" );
    });

    $(".use-address").click(function() {
    var $row = $(this).closest("tr");    // Find the row
    var $text = $row.find(".nr").text(); // Find the text

    // Let's test it out
    alert($text);
    });

      $(document).ready(function () {

            $("#dialog-Route").dialog({
                open: function (event, ui) {
                    $(this).parent().children().children('.ui-dialog-titlebar-close').hide();
                    $(this).parent().addClass('ui-dialog-2900');
                },
                autoOpen: false,
                height: 700,
                width: 1050,
                modal: true,
                dialogClass: "no-titlebar"
            }).css({ "font-family": "'open sans', 'Helvetica Neue', 'Helvetica', Arial, sans-serif", "font-size": "12px" });

      });


    </script>
}

