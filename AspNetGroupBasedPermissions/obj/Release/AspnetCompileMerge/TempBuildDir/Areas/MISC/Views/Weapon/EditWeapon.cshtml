@model Core.Entities.Data.MISC.Weapon
@{ ViewBag.Title = "Edit Weapon";}

<div class="wrapper wrapper-content">
    <div class="row">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ID)

            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-content" style="background-color:#f7f5f5;">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label style="font-weight:bolder;" class="pull-left btn btn-xs btn-primary btn-block">Weapon Info</label>
                            </div>
                            <div class="welldetailsContactedit" style="background-color:#c8faf0;">
                                <br />
                                <br />
                                <div class="wellpob" style="min-height:200px; background-color:#c8faf0;">
                                    <div class="circle-border">
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BusinessUnit, "Business Unit", new { @class = "control-label col-md-3" })
                                                <div class="col-md-8">
                                                    @*@Html.DropDownList("BusinessUnit", ViewData["BusinessUnit"] as SelectList, "--Select Business Unit--", htmlAttributes: new { @id = "bizunit", @class = "form-control", onchange = "FuncBranch(this.value), FuncBranchCharge(this.value), FuncWorkshop(this.value)", @required = "required", @style = "font-size:12px;height:30px;" })*@

                                                    @Html.DropDownList("BusinessUnit", (IEnumerable<SelectListItem>)Session["BusinessUnit"], " < Select Business Unit >", new {  @id = "bizunit", onchange = "FuncBranch(this.value)", @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                                    @Html.HiddenFor(model => model.BusinessUnit)
                                                    @Html.ValidationMessageFor(model => model.BusinessUnit)
                                                </div>
                                                @Html.LabelFor(model => model.SerialNo, "Serial No", new { @class = "control-label col-md-3" })
                                                <div class="col-md-8">
                                                    @Html.TextBox("SerialNo", ViewData[""], new { @class = "form-control", @readonly = "readonly", @style = "font-size:12px;height:30px; background-color: #edfcf9;" })
                                                    @Html.ValidationMessageFor(model => model.SerialNo)
                                                </div>
                                                @Html.LabelFor(model => model.Calibre, "Calibre", new { @class = "control-label col-sm-3" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Calibre", (IEnumerable<SelectListItem>)Session["Calibre"], " < Select Calibre >", new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                                    @Html.ValidationMessageFor(model => model.Calibre)
                                                </div>
                                                @Html.LabelFor(model => model.WeaponType, "WeaponType", new { @class = "control-label col-sm-3" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("WeaponType", (IEnumerable<SelectListItem>)Session["WeaponType"], " < Select Weapon Type >", new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                                    @Html.ValidationMessageFor(model => model.WeaponType)
                                                </div>
                                                @Html.LabelFor(model => model.LicenseHolder, "License Holder", new { @class = "control-label col-md-3" })
                                                <div class="col-md-8">
                                                    @Html.EditorFor(model => model.LicenseHolder, new { htmlAttributes = new { @class = "form-control", @required = "required", @style = ";font-size:12px;height:30px;" } })
                                                    @Html.ValidationMessageFor(model => model.LicenseHolder)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BranchID, "Branch", new { @class = "control-label col-md-3" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("BranchID", (IEnumerable<SelectListItem>
                                                        )Session["BranchID"], " < Select Branch >", new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                                        @Html.HiddenFor(model => model.BranchID)
                                                        @Html.ValidationMessageFor(model => model.BranchID)
                                                </div>
                                                @Html.LabelFor(model => model.ModelName, "Model Name", new { @class = "control-label col-md-3" })
                                                <div class="col-md-8">
                                                    @Html.EditorFor(model => model.ModelName, new { htmlAttributes = new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" }, @id = "SerialNumber" })
                                                    @Html.ValidationMessageFor(model => model.ModelName)
                                                </div>
                                                @Html.LabelFor(model => model.Maker, "Maker", new { @class = "control-label col-sm-3" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Maker", (IEnumerable<SelectListItem>)Session["Maker"], " < Select Maker >", new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                                    @Html.ValidationMessageFor(model => model.Maker)
                                                </div>
                                                @Html.LabelFor(model => model.LicenseNo, "License No", new { @class = "control-label col-md-3" })
                                                <div class="col-md-8">
                                                    @Html.EditorFor(model => model.LicenseNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @style = ";font-size:12px;height:30px;" } })
                                                    @Html.ValidationMessageFor(model => model.LicenseNo)
                                                </div>
                                                @Html.LabelFor(model => model.Status, "Status", new { @class = "control-label col-md-3" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Status", (IEnumerable<SelectListItem>)Session["Status"], " < Select Status >", new { @class = "form-control", @required = "required", @style = "font-size:12px;height:30px;" })
                                                    @Html.ValidationMessageFor(model => model.Status)
                                                </div>
                                                @Html.LabelFor(model => model.IsActive, "Is Active?", new { @class = "control-label col-md-3" })
                                                <div class="col-md-8">
                                                    @Html.DisplayFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @required = "required", @style = "background-color: font-size:12px;height:15px; background-color: #edfcf9;" } })
                                                    @Html.ValidationMessageFor(model => model.IsActive)
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-offset-5 col-md-9">
                            <input type="submit" value="Update" class="btn btn-xs btn-primary" style="border-color:#37a5ed;background-color:#37a5ed;width:60px;" />
                            @Html.ActionLink("Cancel", "IndexWeapon", null, new { @class = "btn btn-white" })
                        </div>
                    </div>
                </div>
            </div>

        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")

    <script src="~/Scripts/plugins/knockout/knockout.validation.js"></script>
    <script type="text/javascript">

         function FuncBranch(bizUnit) {
              if (bizUnit== null || bizUnit == "") {
                  $('#BranchID').html(""); // clear before appending new list
                  $('#BranchID').append(
                      $('<option></option>').val("").html("--Select Branch--"));
              }
              else {
                  $.ajax({
                      url: '@Url.Action("FillBranch", "Branch", new { area = "Administrator" })',
                      type: "POST",
                      dataType: "JSON",
                      data: {
                         bizUnit: bizUnit
                      },

                      success: function (results) {
                          $('#BranchID').html(""); // clear before appending new list
                          $('#BranchID').append(
                          $('<option></option>').val("").html("--Select Branch--"));
                          $.each(results, function (i, results) {
                              $('#BranchID').append(
                                  $('<option></option>').val(results.ID).html(results.BranchName));
                          });
                      },
                      error: function (error) {
                          $.notify(
                              error,
                              { position: "top center", className: "Please Select A Correct Branch" }
                          );
                      }
                  });
              }
        }


        $(document).ready(function () {

            $("#RoadTaxDate").datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            }).datepicker("setDate", new Date());

        });


    </script>
}

