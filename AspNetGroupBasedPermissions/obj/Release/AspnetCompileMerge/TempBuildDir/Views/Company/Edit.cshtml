@model Core.Entities.Data.Company

@{
    ViewBag.Title = "Edit";
}

<div class="wrapper wrapper-content">
    <div class="row">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)      
            @Html.HiddenFor(model => model.CompanyCode)
            <div class="col-lg-12">

                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Edit Company Details </h5>

                    </div>
                    <div class="ibox-content">
                        <div class="row">

                            <div class="wellpob" style="min-height:190px; background-color: #EFF1FB;padding:14px;  margin-bottom:3px;">
                                <div class="circle-border">
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CompanyCode, new { @class = "control-label col-md-5" })
                                            <div class="col-md-7">
                                                @Html.EditorFor(model => model.CompanyCode)
                                                @Html.ValidationMessageFor(model => model.CompanyCode)
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CompanyName, new { @class = "control-label col-md-5" })
                                            <div class="col-md-7">
                                                @Html.EditorFor(model => model.CompanyName)
                                                @Html.ValidationMessageFor(model => model.CompanyName)
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-5" })
                                            <div class="col-md-7">
                                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", rows = "4", @placeholder = "Please Insert Address" })
                                                @Html.ValidationMessageFor(model => model.Address)
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.MobilePhone, new { @class = "control-label col-md-5" })
                                            <div class="col-md-7">
                                                @Html.EditorFor(model => model.MobilePhone)
                                                @Html.ValidationMessageFor(model => model.MobilePhone)
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-5" })
                                            <div class="col-md-7">
                                                @Html.EditorFor(model => model.Phone)
                                                @Html.ValidationMessageFor(model => model.Phone)
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Fax, new { @class = "control-label col-md-5" })
                                            <div class="col-md-7">
                                                @Html.EditorFor(model => model.Fax)
                                                @Html.ValidationMessageFor(model => model.Fax)
                                            </div>
                                        </div>


                                    </div>
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmailContact, new { @class = "control-label col-md-5" })
                                            <div class="col-md-7">
                                                @Html.EditorFor(model => model.EmailContact)
                                                @Html.ValidationMessageFor(model => model.EmailContact)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DefaultCurrencyCode, "Currency", new { @class = "control-label col-md-5" })
                                            <div class="col-md-7">
                                                @Html.DropDownList("DefaultCurrencyCode", ViewData["RTMCurrencies"] as SelectList, "-- Select Currency --", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.DefaultCurrencyCode)
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.SystemActivity, new { @class = "control-label col-md-5" })
                                            <div class="col-md-5">
                                                @Html.EditorFor(model => model.SystemActivity)
                                                @Html.ValidationMessageFor(model => model.SystemActivity)
                                            </div>
                                        </div>
                                        <p>&nbsp;</p>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-5" })
                                            <div class="col-md-5">
                                                @Html.EditorFor(model => model.IsActive)
                                                @Html.ValidationMessageFor(model => model.IsActive)
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>



            </div>

            <div class="col-lg-12">

                <div class="ibox float-e-margins">
                    <div class="ibox-content">
                        <div class="row">

                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>


                        </div>
                    </div>
                </div>

            </div>
        }


    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/plugins/dataPicker")
	  <script type="text/javascript">
        $(document).ready(function () {

         $('#data_1 .input-group.date').datepicker({
             todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });
        });
    
    </script>
}
