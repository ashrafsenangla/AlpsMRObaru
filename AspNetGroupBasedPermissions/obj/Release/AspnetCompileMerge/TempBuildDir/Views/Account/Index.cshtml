@model IEnumerable<AspNetGroupBasedPermissions.Models.EditUserViewModel>
@using AspNetGroupBasedPermissions.Helpers

@{
    ViewBag.Title = "User Management";
}


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>List of Users</h5>
                    <div class="ibox-tools">
                        <div class="ibox-tools">
                            @Html.ActionLink("Create New", "Register", null, new { @class = "btn btn-primary btn-xs" })
                        </div>
                    </div>
                </div>
                <div class="ibox-content">

                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.UserName)
                                </th>
                                <th>
                                    Name
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Email)
                                </th>
                                <th>Edit</th>
                                <th>Business Unit</th>
                                <th>Branch</th>
                                <th>Services</th>
                                <th>Roles</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td>
                                    @Html.EncodedActionLink("Edit", "Edit", "Account", new { id = item.UserName }, new { @class = "btn-primary" })
                                </td>
                                <td>
                                    @Html.EncodedActionLink("Business Unit", "UserBusinessUnits", "Account", new { id = item.UserName }, new { @class = "btn-primary" })
                                </td>
                                <td>
                                    @Html.EncodedActionLink("Branch", "UserBranchs", "Account", new { id = item.UserName }, new { @class = "btn-primary" })
                                </td>
                                <td>
                                    @Html.EncodedActionLink("Services", "UserServices", "Account", new { id = item.UserName }, new { @class = "btn-primary" })
                                </td>
                                <td>
                                    @Html.EncodedActionLink("Roles", "userPermissions", "Account", new { id = item.UserName }, new { @class = "btn-primary" })
                                </td>
                                <td>
                                    @Html.EncodedActionLink("Delete", "Delete", "Account", new { id = item.UserName }, new { @class = "btn-white" })
                                </td>

                            </tr>
                            }

                    </table>

                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-container" class="modal fade"
     tabindex="-1" role="dialog">
    <div class="modal-content">

    </div>
</div>

<div id="dialog-AssignCompany" title="Assign Company" style="overflow-x: hidden;">
</div>
<div style="display:none" id="divDialog"></div>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    <style>
        .modal-content {
            width: 800px !important;
            margin: 30px auto !important;
        }
    </style>

}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")

    <script type="text/javascript">
        $(document).ready(function () {
            $('.dataTables-example').dataTable({
                "dom": 'T<"clear">lfrtip',
                "tableTools": {
                    "sSwfPath": "../scripts/plugins/dataTables/swf/copy_csv_xls_pdf.swf"
                }
            });
        });


    </script>

    <script type="text/javascript">
        $(function () {

            $('body').on('click', '.modal-link', function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#modal-container');
                $(this).attr('data-toggle', 'modal');
            });
            // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
            $('body').on('click', '.modal-close-btn', function () {
                $('#modal-container').modal('hide');
            });
            //clear modal cache, so that new content can be loaded
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
            $('#CancelModal').on('click', function () {
                return false;
            });
        });

        $(function () {
            $("#showDialog").click(function () { DisplayUpdateCustomerDialog(); });
        });
        function DisplayUpdateCustomerDialog() {
            //...code for dialog
        }
    </script>
}


