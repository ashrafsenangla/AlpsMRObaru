@model Core.Entities.Data.License.NotifyEmail

@{
    ViewBag.Title = "Create";
}



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
               <div class="ibox-content">

				@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <div class=" form-group">
            @Html.LabelFor(model => model.CostCenterId, "Department", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                @Html.DropDownList("CostCenterId", (IEnumerable<SelectListItem>)Session["CostCenterId"], "---Select Department---", new { onchange = "licenseDepartmentChange()", id = "departmentId", @class = "form-control col-md-5", @required = "required" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.GroupName, new { @class = "form-control", id = "groupNameId", @required = "required" })
                @Html.ValidationMessageFor(model => model.GroupName)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new { @class="form-control", @type="Email", @required = "required"})
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
				@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white"})
            </div>
        </div>
    </div>
}

                </div>
            </div>
        </div>
    </div>
 </div>

 
@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/wizardStepsStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
    @Styles.Render("~/Content/plugins/blueimp/css/")
}

@section Scripts {

    @Scripts.Render("~/plugins/notifyjs")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/wizardSteps")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/lightboxGallery")
    @Scripts.Render("~/plugins/dropZone")

    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatable")


	  <script type="text/javascript">
        $(document).ready(function () {

         $('#data_1 .input-group.date').datepicker({
             todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
         });

         $("#groupNameId").autocomplete({
             source: function (request, response) {
                 $.ajax({
                     url: "/NotifyEmail/MatchGroupName",
                     type: "POST",
                     dataType: "json",
                     data: { search: request.term },
                     success: function (data) {
                         response($.map(data, function (item) {
                             return { label: item.GroupName, value: item.GroupName };
                         }))

                     }
                 })
             },
             messages: {
                 noResults: "No results",
                 results: function (count) {
                     return count + (count == 0 ? ' result' : ' results');
                 }
             }
         });

        });
    
    </script>
}
