@model Core.Entities.Data.PartRequest.PartVendor
@using AspNetGroupBasedPermissions.Helpers
@{ ViewBag.Title = "Edit Part Vendor";}
@{
    Layout = "~/Views/Shared/_LayoutPopUp.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.PartVendorID)

    <div id="mainbox" class="row">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="panel-heading btn-primary modal-header">
                    <center class="panel-title" style="min-height:10px;">
                        <h4 style="font-weight:300">Edit Part Vendor</h4>
                    </center>
                </div>
                <div class="modal-body">
                    <table class="table table-condensed table-striped table-bordered">
                        <tr></tr>
                        <tr>
                            <td style="padding:13px;font-weight:700">Part Vendor ID</td>
                            <td>
                                @Html.EditorFor(model => model.PartVendorID, new { htmlAttributes = new { @disabled = "true", @class = "form-control", @style = "font-size:11px;height:28px;color:black;font-size:11px", } })
                                @Html.ValidationMessageFor(model => model.PartVendorID)
                            </td>
                        </tr>
                        <tr>
                            <td style="padding:13px;font-weight:700">Part</td>
                            <td>
                                <input id="partName" style="max-height:28px;font-size:11px;background-color:lightgoldenrodyellow" class="form-control" onchange="GetPartName(this.value)" type="text" name="searchbox" placeholder="--Search Part Name--"  />
                                @Html.DropDownList("PartID", (IEnumerable<SelectListItem>)Session["PartID"], " --Select Part--", new { @class = "form-control", @id="partid" ,@required = "required", @style = "font-size:12px;height:30px;" })
                                @Html.HiddenFor(model => model.PartID)
                                @Html.ValidationMessageFor(model => model.PartID)
                            </td>
                        </tr>
                        <tr>
                            <td style="padding:13px;font-weight:700">Vendor</td>
                            <td>
                                <input id="vendorName" style="max-height:28px;font-size:11px;background-color:lightgoldenrodyellow" class="form-control" onchange="GetPartName(this.value)" type="text" name="searchbox2" placeholder="--Search Vendor Name--" />
                                @Html.DropDownList("VendorID", (IEnumerable<SelectListItem>)Session["VendorID"], " --Select Vendor--", new { @class = "form-control", @id = "vendorid", @required = "required", @style = "font-size:12px;height:30px;" })
                                @Html.HiddenFor(model => model.VendorID)
                                @Html.ValidationMessageFor(model => model.VendorID)
                            </td>
                        </tr>
                        <tr>
                            <td style="padding:13px;font-weight:700">Price</td>
                            <td>
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @value = 0, @style = "font-size:11px;height:28px;color:black;font-size:11px", } })
                                @Html.ValidationMessageFor(model => model.Price)
                            </td>
                        </tr>
                        <tr>
                            <td style="padding:13px;font-weight:700">Description</td>
                            <td>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", maxlength = 300, @style = "font-size:11px;height:28px;color:black;font-size:11px", } })
                                @Html.ValidationMessageFor(model => model.Description)
                            </td>
                        </tr>
                        <tr>
                            <td style="padding:13px;font-weight:700">Is Active?</td>
                            <td>
                                @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @style = "font-size:11px;height:18px;color:black", } })
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </td>
                        </tr>
                        <tr>
                            <td style="padding:13px;font-weight:700">Status</td>
                            <td>
                                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @disabled = "true", @style = "font-size:11px;height:28px;color:black;font-size:11px", } })
                                @Html.ValidationMessageFor(model => model.Status)
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update" class="btn btn-primary" />
                        @Html.ActionLink("Cancel", "IndexPartVendor", null, new { @class = "btn btn-white" })
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/app/knockoutDatatableCheckbox")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/notifyjs")


    <script type="text/javascript">


        $(document).ready(function () {
        var filterby = "partname";
        $("#partName").autocomplete({
            source: function (request, response) {
                var partname = document.getElementById("partName").value;
                  $.ajax({
                      url: '@Url.Action("GetPartName", "PartVendor", new { area = "PartRequest" })',
                      type: "POST",
                      dataType: "JSON",
                      data: {
                          partname: partname,
                          filterby: filterby
                      },

                      success: function (results) {
                          $('#partid').html(""); // clear before appending new list
                          $('#partid').append(
                          $('<option></option>').val("").html("--Select Part--"));
                          $.each(results, function (i, results) {
                              $('#partid').append(
                                  $('<option></option>').val(results.PartID).html(results.PartName));
                              $('#partno').append(
                                  $('<option></option>').val(results.PartID).html(results.PartNo));
                              $('#partNo').append(
                                  $('<option></option>').val(results.PartID).html(results.PartName));
                          });
                      },
                      error: function (error) {
                      }
                  });

        },
        select: function (event, ui) {
            $("#pettycodeid").val(ui.item.partName);
        }
         });
           });


      $(document).ready(function () {
        var filterby = "partname";
        $("#vendorName").autocomplete({
            source: function (request, response) {
                var vendorname = document.getElementById("vendorName").value;
                  $.ajax({
                      url: '@Url.Action("GetVendorName", "PartVendor", new { area = "PartRequest" })',
                      type: "POST",
                      dataType: "JSON",
                      data: {
                          vendorname: vendorname,
                          filterby: filterby
                      },

                      success: function (results) {
                          $('#vendorid').html(""); // clear before appending new list
                          $('#vendorid').append(
                          $('<option></option>').val("").html("--Select Part--"));
                          $.each(results, function (i, results) {
                              $('#vendorid').append(
                                  $('<option></option>').val(results.VendorID).html(results.VendorName));
                          });
                      },
                      error: function (error) {
                      }
                  });

        },
        select: function (event, ui) {
            $("#pettycodeid").val(ui.item.partName);
        }
         });
           });



        $(document).ready(function () {

            $("#transactiondate").datepicker({
                todayBtn: "linked",
                format: "dd/mm/yyyy",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            }).datepicker("setDate", new Date());


        });

    </script>
}
