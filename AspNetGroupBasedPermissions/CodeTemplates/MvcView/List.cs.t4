<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
@using AspNetGroupBasedPermissions.Helpers
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                  <h5>List of <#= ViewDataTypeShortName #></h5>
				  <div class="ibox-tools">
					<div class="ibox-tools">
						@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary btn-xs"})
					</div>
                 </div>
				</div>
                <div class="ibox-content">

<table class="table table-striped table-bordered table-hover dataTables-example">
   <thead><tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
        <th></th>
    </tr>
	</thead>
	<tbody>

@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
			@Html.EncodedActionLink("Details", "Details", "#routevalues",new { id=item.<#= pkName #> }, new { @class = "btn-primary"})
            @Html.EncodedActionLink("Edit", "Edit","#routevalues", new { id=item.<#= pkName #> }, new { @class = "btn-white"})
            @Html.EncodedActionLink("Delete", "Delete", "#routevalues", new { id=item.<#= pkName #> }, new { @class = "btn-white"})
        </td>
<#
} else {
#>
        <td>
			@Html.EncodedActionLink("Details", "Details","#routevalues", new { /* id=item.PrimaryKey */ }, new { @class = "btn-primary"})
            @Html.EncodedActionLink("Edit", "Edit", "#routevalues",new { /* id=item.PrimaryKey */ }, new { @class = "btn-white"})
            @Html.EncodedActionLink("Delete", "Delete","#routevalues" ,new { /* id=item.PrimaryKey */ }, new { @class = "btn-white"})
        </td>
<#
}
#>
    </tr>
}

</table>

                </div>
            </div>
        </div>
    </div>
 </div>




<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}

 @section Scripts {
            @Scripts.Render("~/plugins/dataTables")

  <script type="text/javascript">
        $(document).ready(function () {
            $('.dataTables-example').dataTable({
                "dom": 'T<"clear">lfrtip',
                "tableTools": {
                    "sSwfPath": "../scripts/plugins/dataTables/swf/copy_csv_xls_pdf.swf"
                }
            });
        });
    </script>
	}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>

<#@ include file="ModelMetadataFunctions.cs.include.t4" #>